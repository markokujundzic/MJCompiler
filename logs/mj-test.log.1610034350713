INFO  16:45:28,638 - ====================LEXICAL ANALYSIS========================
INFO  16:45:28,717 - #2 program
INFO  16:45:28,717 - #9 prog
INFO  16:45:28,718 - #5 const
INFO  16:45:28,719 - #9 int
INFO  16:45:28,719 - #9 konstanta
INFO  16:45:28,720 - #8 =
INFO  16:45:28,721 - #10 5
INFO  16:45:28,721 - #6 ;
INFO  16:45:28,722 - #9 char
INFO  16:45:28,722 - #9 a
INFO  16:45:28,722 - #6 ;
INFO  16:45:28,725 - #9 char
INFO  16:45:28,725 - #9 b
INFO  16:45:28,725 - #6 ;
INFO  16:45:28,725 - #3 {
INFO  16:45:28,726 - #15 void
INFO  16:45:28,727 - #9 main
INFO  16:45:28,727 - #13 (
INFO  16:45:28,728 - #14 )
INFO  16:45:28,729 - #9 int
INFO  16:45:28,730 - #9 x
INFO  16:45:28,730 - #6 ;
INFO  16:45:28,730 - #9 int
INFO  16:45:28,736 - #9 y
INFO  16:45:28,736 - #6 ;
INFO  16:45:28,736 - #9 int
INFO  16:45:28,736 - #9 z
INFO  16:45:28,736 - #6 ;
INFO  16:45:28,737 - #3 {
INFO  16:45:28,737 - #9 x
INFO  16:45:28,737 - #8 =
INFO  16:45:28,740 - #34 -
INFO  16:45:28,740 - #10 1
INFO  16:45:28,741 - #37 *
INFO  16:45:28,741 - #13 (
INFO  16:45:28,742 - #10 7
INFO  16:45:28,742 - #36 +
INFO  16:45:28,744 - #10 3
INFO  16:45:28,745 - #34 -
INFO  16:45:28,745 - #9 konstanta
INFO  16:45:28,746 - #14 )
INFO  16:45:28,747 - #37 *
INFO  16:45:28,747 - #13 (
INFO  16:45:28,747 - #34 -
INFO  16:45:28,747 - #10 1
INFO  16:45:28,747 - #37 *
INFO  16:45:28,747 - #9 konstanta
INFO  16:45:28,747 - #36 +
INFO  16:45:28,747 - #10 4
INFO  16:45:28,747 - #14 )
INFO  16:45:28,747 - #6 ;
INFO  16:45:28,748 - #30 print
INFO  16:45:28,749 - #13 (
INFO  16:45:28,749 - #9 x
INFO  16:45:28,749 - #39 %
INFO  16:45:28,749 - #10 3
INFO  16:45:28,749 - #14 )
INFO  16:45:28,750 - #6 ;
INFO  16:45:28,750 - #9 a
INFO  16:45:28,751 - #8 =
INFO  16:45:28,751 - #12 a
INFO  16:45:28,751 - #6 ;
INFO  16:45:28,751 - #9 b
INFO  16:45:28,752 - #8 =
INFO  16:45:28,752 - #9 a
INFO  16:45:28,752 - #36 +
INFO  16:45:28,752 - #10 1
INFO  16:45:28,752 - #6 ;
INFO  16:45:28,752 - #30 print
INFO  16:45:28,752 - #13 (
INFO  16:45:28,752 - #9 b
INFO  16:45:28,752 - #14 )
INFO  16:45:28,752 - #6 ;
INFO  16:45:28,752 - #9 y
INFO  16:45:28,752 - #8 =
INFO  16:45:28,752 - #34 -
INFO  16:45:28,753 - #10 8
INFO  16:45:28,753 - #34 -
INFO  16:45:28,753 - #10 2
INFO  16:45:28,753 - #37 *
INFO  16:45:28,753 - #10 3
INFO  16:45:28,753 - #6 ;
INFO  16:45:28,753 - #30 print
INFO  16:45:28,753 - #13 (
INFO  16:45:28,753 - #9 y
INFO  16:45:28,753 - #14 )
INFO  16:45:28,753 - #6 ;
INFO  16:45:28,753 - #4 }
INFO  16:45:28,753 - #4 }
INFO  16:45:28,764 - =======================SYNTAX TREE===========================
INFO  16:45:28,767 - Program(
  ProgramName(
   prog
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        NoDeclarationList(
        ) [NoDeclarationList]
        ConstantDeclaration(
          ConstDeclNoError(
            Type(
             int
            ) [Type]
            SingleConstDeclList(
              ConstDeclVariable(
                ConstDeclName(
                 konstanta
                ) [ConstDeclName]
                ConstDeclValueInt(
                 5
                ) [ConstDeclValueInt]
              ) [ConstDeclVariable]
            ) [SingleConstDeclList]
          ) [ConstDeclNoError]
        ) [ConstantDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           char
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               a
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         char
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             b
            ) [VarDeclName]
            NoVarDeclArrayOption(
            ) [NoVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      YesMethodVariables(
        YesMethodVariables(
          YesMethodVariables(
            NoMethodVariables(
            ) [NoMethodVariables]
            VarDeclNoError(
              Type(
               int
              ) [Type]
              SingleVarDeclList(
                DeclVariable(
                  VarDeclName(
                   x
                  ) [VarDeclName]
                  NoVarDeclArrayOption(
                  ) [NoVarDeclArrayOption]
                ) [DeclVariable]
              ) [SingleVarDeclList]
            ) [VarDeclNoError]
          ) [YesMethodVariables]
          VarDeclNoError(
            Type(
             int
            ) [Type]
            SingleVarDeclList(
              DeclVariable(
                VarDeclName(
                 y
                ) [VarDeclName]
                NoVarDeclArrayOption(
                ) [NoVarDeclArrayOption]
              ) [DeclVariable]
            ) [SingleVarDeclList]
          ) [VarDeclNoError]
        ) [YesMethodVariables]
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               z
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [YesMethodVariables]
      YesMethodBody(
        YesMethodBody(
          YesMethodBody(
            YesMethodBody(
              YesMethodBody(
                YesMethodBody(
                  YesMethodBody(
                    NoMethodBody(
                    ) [NoMethodBody]
                    DesignatorStatementDecl(
                      DesignatorStatement(
                        Designator(
                          DesignatorName(
                           x
                          ) [DesignatorName]
                          NoOptionalDesignator(
                          ) [NoOptionalDesignator]
                        ) [Designator]
                        PossibleErrorAssignOpDesignatorAddition(
                          AssignOpExprDesignatorAdditionNoError(
                            Assignop(
                            ) [Assignop]
                            NoTernaryExpr(
                              SingleCondFact(
                                MinusTermFiniteExpr(
                                  FiniteTerm(
                                    MulopTerm(
                                      MulopTerm(
                                        FactorTerm(
                                          IntFactor(
                                           1
                                          ) [IntFactor]
                                        ) [FactorTerm]
                                        MulopMul(
                                        ) [MulopMul]
                                        ExprFactor(
                                          NoTernaryExpr(
                                            SingleCondFact(
                                              TermFiniteExpr(
                                                FiniteTerm(
                                                  FactorTerm(
                                                    IntFactor(
                                                     7
                                                    ) [IntFactor]
                                                  ) [FactorTerm]
                                                ) [FiniteTerm]
                                                YesOptionalTermList(
                                                  YesOptionalTermList(
                                                    NoOptionalTermList(
                                                    ) [NoOptionalTermList]
                                                    AddopPlus(
                                                    ) [AddopPlus]
                                                    FiniteTerm(
                                                      FactorTerm(
                                                        IntFactor(
                                                         3
                                                        ) [IntFactor]
                                                      ) [FactorTerm]
                                                    ) [FiniteTerm]
                                                  ) [YesOptionalTermList]
                                                  AddopMinus(
                                                  ) [AddopMinus]
                                                  FiniteTerm(
                                                    FactorTerm(
                                                      DesignatorFactor(
                                                        Designator(
                                                          DesignatorName(
                                                           konstanta
                                                          ) [DesignatorName]
                                                          NoOptionalDesignator(
                                                          ) [NoOptionalDesignator]
                                                        ) [Designator]
                                                      ) [DesignatorFactor]
                                                    ) [FactorTerm]
                                                  ) [FiniteTerm]
                                                ) [YesOptionalTermList]
                                              ) [TermFiniteExpr]
                                            ) [SingleCondFact]
                                          ) [NoTernaryExpr]
                                        ) [ExprFactor]
                                      ) [MulopTerm]
                                      MulopMul(
                                      ) [MulopMul]
                                      ExprFactor(
                                        NoTernaryExpr(
                                          SingleCondFact(
                                            MinusTermFiniteExpr(
                                              FiniteTerm(
                                                MulopTerm(
                                                  FactorTerm(
                                                    IntFactor(
                                                     1
                                                    ) [IntFactor]
                                                  ) [FactorTerm]
                                                  MulopMul(
                                                  ) [MulopMul]
                                                  DesignatorFactor(
                                                    Designator(
                                                      DesignatorName(
                                                       konstanta
                                                      ) [DesignatorName]
                                                      NoOptionalDesignator(
                                                      ) [NoOptionalDesignator]
                                                    ) [Designator]
                                                  ) [DesignatorFactor]
                                                ) [MulopTerm]
                                              ) [FiniteTerm]
                                              YesOptionalTermList(
                                                NoOptionalTermList(
                                                ) [NoOptionalTermList]
                                                AddopPlus(
                                                ) [AddopPlus]
                                                FiniteTerm(
                                                  FactorTerm(
                                                    IntFactor(
                                                     4
                                                    ) [IntFactor]
                                                  ) [FactorTerm]
                                                ) [FiniteTerm]
                                              ) [YesOptionalTermList]
                                            ) [MinusTermFiniteExpr]
                                          ) [SingleCondFact]
                                        ) [NoTernaryExpr]
                                      ) [ExprFactor]
                                    ) [MulopTerm]
                                  ) [FiniteTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [MinusTermFiniteExpr]
                              ) [SingleCondFact]
                            ) [NoTernaryExpr]
                          ) [AssignOpExprDesignatorAdditionNoError]
                        ) [PossibleErrorAssignOpDesignatorAddition]
                      ) [DesignatorStatement]
                    ) [DesignatorStatementDecl]
                  ) [YesMethodBody]
                  PrintStatementDecl(
                    PrintStatement(
                      NoTernaryExpr(
                        SingleCondFact(
                          TermFiniteExpr(
                            FiniteTerm(
                              MulopTerm(
                                FactorTerm(
                                  DesignatorFactor(
                                    Designator(
                                      DesignatorName(
                                       x
                                      ) [DesignatorName]
                                      NoOptionalDesignator(
                                      ) [NoOptionalDesignator]
                                    ) [Designator]
                                  ) [DesignatorFactor]
                                ) [FactorTerm]
                                MulopMod(
                                ) [MulopMod]
                                IntFactor(
                                 3
                                ) [IntFactor]
                              ) [MulopTerm]
                            ) [FiniteTerm]
                            NoOptionalTermList(
                            ) [NoOptionalTermList]
                          ) [TermFiniteExpr]
                        ) [SingleCondFact]
                      ) [NoTernaryExpr]
                      OptionalNoPrintNumber(
                      ) [OptionalNoPrintNumber]
                    ) [PrintStatement]
                  ) [PrintStatementDecl]
                ) [YesMethodBody]
                DesignatorStatementDecl(
                  DesignatorStatement(
                    Designator(
                      DesignatorName(
                       a
                      ) [DesignatorName]
                      NoOptionalDesignator(
                      ) [NoOptionalDesignator]
                    ) [Designator]
                    PossibleErrorAssignOpDesignatorAddition(
                      AssignOpExprDesignatorAdditionNoError(
                        Assignop(
                        ) [Assignop]
                        NoTernaryExpr(
                          SingleCondFact(
                            TermFiniteExpr(
                              FiniteTerm(
                                FactorTerm(
                                  CharFactor(
                                   a
                                  ) [CharFactor]
                                ) [FactorTerm]
                              ) [FiniteTerm]
                              NoOptionalTermList(
                              ) [NoOptionalTermList]
                            ) [TermFiniteExpr]
                          ) [SingleCondFact]
                        ) [NoTernaryExpr]
                      ) [AssignOpExprDesignatorAdditionNoError]
                    ) [PossibleErrorAssignOpDesignatorAddition]
                  ) [DesignatorStatement]
                ) [DesignatorStatementDecl]
              ) [YesMethodBody]
              DesignatorStatementDecl(
                DesignatorStatement(
                  Designator(
                    DesignatorName(
                     b
                    ) [DesignatorName]
                    NoOptionalDesignator(
                    ) [NoOptionalDesignator]
                  ) [Designator]
                  PossibleErrorAssignOpDesignatorAddition(
                    AssignOpExprDesignatorAdditionNoError(
                      Assignop(
                      ) [Assignop]
                      NoTernaryExpr(
                        SingleCondFact(
                          TermFiniteExpr(
                            FiniteTerm(
                              FactorTerm(
                                DesignatorFactor(
                                  Designator(
                                    DesignatorName(
                                     a
                                    ) [DesignatorName]
                                    NoOptionalDesignator(
                                    ) [NoOptionalDesignator]
                                  ) [Designator]
                                ) [DesignatorFactor]
                              ) [FactorTerm]
                            ) [FiniteTerm]
                            YesOptionalTermList(
                              NoOptionalTermList(
                              ) [NoOptionalTermList]
                              AddopPlus(
                              ) [AddopPlus]
                              FiniteTerm(
                                FactorTerm(
                                  IntFactor(
                                   1
                                  ) [IntFactor]
                                ) [FactorTerm]
                              ) [FiniteTerm]
                            ) [YesOptionalTermList]
                          ) [TermFiniteExpr]
                        ) [SingleCondFact]
                      ) [NoTernaryExpr]
                    ) [AssignOpExprDesignatorAdditionNoError]
                  ) [PossibleErrorAssignOpDesignatorAddition]
                ) [DesignatorStatement]
              ) [DesignatorStatementDecl]
            ) [YesMethodBody]
            PrintStatementDecl(
              PrintStatement(
                NoTernaryExpr(
                  SingleCondFact(
                    TermFiniteExpr(
                      FiniteTerm(
                        FactorTerm(
                          DesignatorFactor(
                            Designator(
                              DesignatorName(
                               b
                              ) [DesignatorName]
                              NoOptionalDesignator(
                              ) [NoOptionalDesignator]
                            ) [Designator]
                          ) [DesignatorFactor]
                        ) [FactorTerm]
                      ) [FiniteTerm]
                      NoOptionalTermList(
                      ) [NoOptionalTermList]
                    ) [TermFiniteExpr]
                  ) [SingleCondFact]
                ) [NoTernaryExpr]
                OptionalNoPrintNumber(
                ) [OptionalNoPrintNumber]
              ) [PrintStatement]
            ) [PrintStatementDecl]
          ) [YesMethodBody]
          DesignatorStatementDecl(
            DesignatorStatement(
              Designator(
                DesignatorName(
                 y
                ) [DesignatorName]
                NoOptionalDesignator(
                ) [NoOptionalDesignator]
              ) [Designator]
              PossibleErrorAssignOpDesignatorAddition(
                AssignOpExprDesignatorAdditionNoError(
                  Assignop(
                  ) [Assignop]
                  NoTernaryExpr(
                    SingleCondFact(
                      MinusTermFiniteExpr(
                        FiniteTerm(
                          FactorTerm(
                            IntFactor(
                             8
                            ) [IntFactor]
                          ) [FactorTerm]
                        ) [FiniteTerm]
                        YesOptionalTermList(
                          NoOptionalTermList(
                          ) [NoOptionalTermList]
                          AddopMinus(
                          ) [AddopMinus]
                          FiniteTerm(
                            MulopTerm(
                              FactorTerm(
                                IntFactor(
                                 2
                                ) [IntFactor]
                              ) [FactorTerm]
                              MulopMul(
                              ) [MulopMul]
                              IntFactor(
                               3
                              ) [IntFactor]
                            ) [MulopTerm]
                          ) [FiniteTerm]
                        ) [YesOptionalTermList]
                      ) [MinusTermFiniteExpr]
                    ) [SingleCondFact]
                  ) [NoTernaryExpr]
                ) [AssignOpExprDesignatorAdditionNoError]
              ) [PossibleErrorAssignOpDesignatorAddition]
            ) [DesignatorStatement]
          ) [DesignatorStatementDecl]
        ) [YesMethodBody]
        PrintStatementDecl(
          PrintStatement(
            NoTernaryExpr(
              SingleCondFact(
                TermFiniteExpr(
                  FiniteTerm(
                    FactorTerm(
                      DesignatorFactor(
                        Designator(
                          DesignatorName(
                           y
                          ) [DesignatorName]
                          NoOptionalDesignator(
                          ) [NoOptionalDesignator]
                        ) [Designator]
                      ) [DesignatorFactor]
                    ) [FactorTerm]
                  ) [FiniteTerm]
                  NoOptionalTermList(
                  ) [NoOptionalTermList]
                ) [TermFiniteExpr]
              ) [SingleCondFact]
            ) [NoTernaryExpr]
            OptionalNoPrintNumber(
            ) [OptionalNoPrintNumber]
          ) [PrintStatement]
        ) [PrintStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  16:45:28,767 - ======================SEMANTIC ANALYSIS======================
INFO  16:45:28,772 - Const variable konstanta declared on line 3
INFO  16:45:28,773 - Global variable a declared on line 5
INFO  16:45:28,773 - Global variable b declared on line 6
INFO  16:45:28,773 - Method main declared on line 9
INFO  16:45:28,773 - Local variable x declared on line 9
INFO  16:45:28,773 - Local variable y declared on line 9
INFO  16:45:28,773 - Local variable z declared on line 9
INFO  16:45:28,773 - Variable x used: Var x: int, 0, 1  on line 11
INFO  16:45:28,774 - Variable konstanta used: Con konstanta: int, 5, 0  on line 11
INFO  16:45:28,774 - Variable konstanta used: Con konstanta: int, 5, 0  on line 11
INFO  16:45:28,775 - Variable x used: Var x: int, 0, 1  on line 12
INFO  16:45:28,775 - Variable a used: Var a: char, 0, 0  on line 14
INFO  16:45:28,776 - Variable b used: Var b: char, 1, 0  on line 15
INFO  16:45:28,776 - Variable a used: Var a: char, 0, 0  on line 15
ERROR 16:45:28,776 - Semantic Error: Types used in FinalExpr on line 15 must be compatible
ERROR 16:45:28,776 - Semantic Error: Incompatible types where Expr is assigned to Designator on line 15
INFO  16:45:28,776 - Variable b used: Var b: char, 1, 0  on line 16
INFO  16:45:28,779 - Variable y used: Var y: int, 1, 1  on line 18
INFO  16:45:28,779 - Variable y used: Var y: int, 1, 1  on line 19
INFO  16:45:28,779 - =======================SYNTAX ANALYSIS=======================
INFO  16:45:28,779 - 1 methods in the program
INFO  16:45:28,779 - 1 constants declared
INFO  16:45:28,779 - 2 global variables declared
INFO  16:45:28,779 - 0 global arrays declared
INFO  16:45:28,780 - 3 local variables declared
INFO  16:45:28,780 - 0 local arrays declared
INFO  16:45:28,780 - 7 statements in main
INFO  16:45:28,780 - ===========ERROR ENCOUNTERED IN SEMANTIC ANALYSIS===========
