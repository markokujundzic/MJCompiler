INFO  21:57:22,043 - ====================LEXICAL ANALYSIS========================
INFO  21:57:22,128 - #2 program
INFO  21:57:22,128 - #9 prog
INFO  21:57:22,128 - #5 const
INFO  21:57:22,130 - #9 int
INFO  21:57:22,130 - #9 konstanta
INFO  21:57:22,131 - #8 =
INFO  21:57:22,131 - #10 5
INFO  21:57:22,131 - #6 ;
INFO  21:57:22,132 - #9 int
INFO  21:57:22,133 - #9 x
INFO  21:57:22,133 - #6 ;
INFO  21:57:22,136 - #9 int
INFO  21:57:22,136 - #9 y
INFO  21:57:22,136 - #6 ;
INFO  21:57:22,136 - #9 int
INFO  21:57:22,137 - #9 z
INFO  21:57:22,137 - #6 ;
INFO  21:57:22,137 - #9 int
INFO  21:57:22,137 - #9 mojNiz
INFO  21:57:22,137 - #20 [
INFO  21:57:22,137 - #21 ]
INFO  21:57:22,137 - #6 ;
INFO  21:57:22,138 - #3 {
INFO  21:57:22,144 - #15 void
INFO  21:57:22,144 - #9 main
INFO  21:57:22,145 - #13 (
INFO  21:57:22,146 - #14 )
INFO  21:57:22,146 - #9 int
INFO  21:57:22,147 - #9 niz
INFO  21:57:22,147 - #20 [
INFO  21:57:22,147 - #21 ]
INFO  21:57:22,147 - #6 ;
INFO  21:57:22,147 - #3 {
INFO  21:57:22,147 - #9 niz
INFO  21:57:22,148 - #8 =
INFO  21:57:22,150 - #9 null
INFO  21:57:22,151 - #6 ;
INFO  21:57:22,155 - #30 print
INFO  21:57:22,155 - #13 (
INFO  21:57:22,155 - #9 niz
INFO  21:57:22,155 - #20 [
INFO  21:57:22,155 - #10 0
INFO  21:57:22,155 - #21 ]
INFO  21:57:22,155 - #14 )
INFO  21:57:22,156 - #6 ;
INFO  21:57:22,157 - #4 }
INFO  21:57:22,161 - #4 }
INFO  21:57:22,173 - =======================SYNTAX TREE===========================
INFO  21:57:22,175 - Program(
  ProgramName(
   prog
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        YesDeclarationList(
          YesDeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            ConstantDeclaration(
              ConstDeclNoError(
                Type(
                 int
                ) [Type]
                SingleConstDeclList(
                  ConstDeclVariable(
                    ConstDeclName(
                     konstanta
                    ) [ConstDeclName]
                    ConstDeclValueInt(
                     5
                    ) [ConstDeclValueInt]
                  ) [ConstDeclVariable]
                ) [SingleConstDeclList]
              ) [ConstDeclNoError]
            ) [ConstantDeclaration]
          ) [YesDeclarationList]
          VariableDeclaration(
            VarDeclNoError(
              Type(
               int
              ) [Type]
              SingleVarDeclList(
                DeclVariable(
                  VarDeclName(
                   x
                  ) [VarDeclName]
                  NoVarDeclArrayOption(
                  ) [NoVarDeclArrayOption]
                ) [DeclVariable]
              ) [SingleVarDeclList]
            ) [VarDeclNoError]
          ) [VariableDeclaration]
        ) [YesDeclarationList]
        VariableDeclaration(
          VarDeclNoError(
            Type(
             int
            ) [Type]
            SingleVarDeclList(
              DeclVariable(
                VarDeclName(
                 y
                ) [VarDeclName]
                NoVarDeclArrayOption(
                ) [NoVarDeclArrayOption]
              ) [DeclVariable]
            ) [SingleVarDeclList]
          ) [VarDeclNoError]
        ) [VariableDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               z
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         int
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             mojNiz
            ) [VarDeclName]
            YesVarDeclArrayOption(
            ) [YesVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      YesMethodVariables(
        NoMethodVariables(
        ) [NoMethodVariables]
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               niz
              ) [VarDeclName]
              YesVarDeclArrayOption(
              ) [YesVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [YesMethodVariables]
      YesMethodBody(
        YesMethodBody(
          NoMethodBody(
          ) [NoMethodBody]
          DesignatorStatementDecl(
            DesignatorStatement(
              Designator(
                DesignatorName(
                 niz
                ) [DesignatorName]
                NoOptionalDesignator(
                ) [NoOptionalDesignator]
              ) [Designator]
              PossibleErrorAssignOpDesignatorAddition(
                AssignOpExprDesignatorAdditionNoError(
                  Assignop(
                  ) [Assignop]
                  NoTernaryExpr(
                    SingleCondFact(
                      TermFiniteExpr(
                        FiniteTerm(
                          FactorTerm(
                            DesignatorFactor(
                              Designator(
                                DesignatorName(
                                 null
                                ) [DesignatorName]
                                NoOptionalDesignator(
                                ) [NoOptionalDesignator]
                              ) [Designator]
                            ) [DesignatorFactor]
                          ) [FactorTerm]
                        ) [FiniteTerm]
                        NoOptionalTermList(
                        ) [NoOptionalTermList]
                      ) [TermFiniteExpr]
                    ) [SingleCondFact]
                  ) [NoTernaryExpr]
                ) [AssignOpExprDesignatorAdditionNoError]
              ) [PossibleErrorAssignOpDesignatorAddition]
            ) [DesignatorStatement]
          ) [DesignatorStatementDecl]
        ) [YesMethodBody]
        PrintStatementDecl(
          PrintStatement(
            NoTernaryExpr(
              SingleCondFact(
                TermFiniteExpr(
                  FiniteTerm(
                    FactorTerm(
                      DesignatorFactor(
                        Designator(
                          DesignatorName(
                           niz
                          ) [DesignatorName]
                          YesOptionalDesignator(
                            NoTernaryExpr(
                              SingleCondFact(
                                TermFiniteExpr(
                                  FiniteTerm(
                                    FactorTerm(
                                      IntFactor(
                                       0
                                      ) [IntFactor]
                                    ) [FactorTerm]
                                  ) [FiniteTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [TermFiniteExpr]
                              ) [SingleCondFact]
                            ) [NoTernaryExpr]
                          ) [YesOptionalDesignator]
                        ) [Designator]
                      ) [DesignatorFactor]
                    ) [FactorTerm]
                  ) [FiniteTerm]
                  NoOptionalTermList(
                  ) [NoOptionalTermList]
                ) [TermFiniteExpr]
              ) [SingleCondFact]
            ) [NoTernaryExpr]
            OptionalNoPrintNumber(
            ) [OptionalNoPrintNumber]
          ) [PrintStatement]
        ) [PrintStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  21:57:22,176 - ======================SEMANTIC ANALYSIS======================
INFO  21:57:22,180 - Const variable konstanta declared on line 3
INFO  21:57:22,180 - Global variable x declared on line 5
INFO  21:57:22,180 - Global variable y declared on line 5
INFO  21:57:22,180 - Global variable z declared on line 5
INFO  21:57:22,181 - Global array mojNiz declared on line 6
INFO  21:57:22,181 - Method main declared on line 9
INFO  21:57:22,181 - Local array niz declared on line 9
INFO  21:57:22,181 - Array niz used: Var niz: Array of int, 0, 1 on line 11
INFO  21:57:22,181 - Variable null used: Con null: , 0, 0 on line 11
INFO  21:57:22,184 - Element of array niz used: Elem niz: int, 0, 1 on line 12
INFO  21:57:22,184 - =======================SYNTAX ANALYSIS=======================
INFO  21:57:22,185 - 1 methods in the program
INFO  21:57:22,185 - 1 constants declared
INFO  21:57:22,185 - 3 global variables declared
INFO  21:57:22,185 - 1 global arrays declared
INFO  21:57:22,185 - 0 local variables declared
INFO  21:57:22,185 - 1 local arrays declared
INFO  21:57:22,185 - 2 statements in main
INFO  21:57:22,193 - ================SEMANTIC ANALYSIS SUCCESSFUL=================
