INFO  15:21:55,911 - ====================LEXICAL ANALYSIS========================
INFO  15:21:55,989 - #2 program
INFO  15:21:55,989 - #9 prog
INFO  15:21:55,989 - #5 const
INFO  15:21:55,989 - #9 int
INFO  15:21:55,989 - #9 jedan
INFO  15:21:55,989 - #8 =
INFO  15:21:55,989 - #10 1
INFO  15:21:55,989 - #6 ;
INFO  15:21:55,989 - #5 const
INFO  15:21:55,989 - #9 int
INFO  15:21:55,989 - #9 pet
INFO  15:21:55,989 - #8 =
INFO  15:21:55,989 - #10 5
INFO  15:21:55,989 - #6 ;
INFO  15:21:55,989 - #9 int
INFO  15:21:55,989 - #9 x
INFO  15:21:55,989 - #6 ;
INFO  15:21:55,989 - #9 int
INFO  15:21:55,989 - #9 y
INFO  15:21:55,989 - #6 ;
INFO  15:21:55,989 - #3 {
INFO  15:21:55,989 - #15 void
INFO  15:21:55,989 - #9 main
INFO  15:21:56,005 - #13 (
INFO  15:21:56,005 - #14 )
INFO  15:21:56,005 - #9 int
INFO  15:21:56,005 - #9 a
INFO  15:21:56,005 - #20 [
INFO  15:21:56,005 - #21 ]
INFO  15:21:56,005 - #6 ;
INFO  15:21:56,005 - #3 {
INFO  15:21:56,005 - #9 a
INFO  15:21:56,005 - #8 =
INFO  15:21:56,005 - #35 new
INFO  15:21:56,005 - #9 int
INFO  15:21:56,005 - #20 [
INFO  15:21:56,005 - #10 8
INFO  15:21:56,005 - #21 ]
INFO  15:21:56,005 - #6 ;
INFO  15:21:56,005 - #9 a
INFO  15:21:56,005 - #20 [
INFO  15:21:56,005 - #10 3
INFO  15:21:56,005 - #21 ]
INFO  15:21:56,005 - #8 =
INFO  15:21:56,005 - #10 1
INFO  15:21:56,005 - #6 ;
INFO  15:21:56,005 - #9 a
INFO  15:21:56,005 - #20 [
INFO  15:21:56,005 - #10 3
INFO  15:21:56,005 - #21 ]
INFO  15:21:56,005 - #22 ++
INFO  15:21:56,005 - #6 ;
INFO  15:21:56,005 - #30 print
INFO  15:21:56,005 - #13 (
INFO  15:21:56,005 - #9 a
INFO  15:21:56,005 - #20 [
INFO  15:21:56,005 - #10 3
INFO  15:21:56,005 - #21 ]
INFO  15:21:56,005 - #14 )
INFO  15:21:56,020 - #6 ;
INFO  15:21:56,020 - #9 a
INFO  15:21:56,020 - #20 [
INFO  15:21:56,020 - #10 3
INFO  15:21:56,020 - #21 ]
INFO  15:21:56,020 - #22 ++
INFO  15:21:56,020 - #6 ;
INFO  15:21:56,020 - #30 print
INFO  15:21:56,020 - #13 (
INFO  15:21:56,020 - #9 a
INFO  15:21:56,020 - #20 [
INFO  15:21:56,020 - #10 3
INFO  15:21:56,020 - #21 ]
INFO  15:21:56,020 - #14 )
INFO  15:21:56,020 - #6 ;
INFO  15:21:56,020 - #9 x
INFO  15:21:56,020 - #8 =
INFO  15:21:56,020 - #10 4
INFO  15:21:56,020 - #6 ;
INFO  15:21:56,020 - #4 }
INFO  15:21:56,020 - #4 }
INFO  15:21:56,020 - =======================SYNTAX TREE===========================
INFO  15:21:56,036 - Program(
  ProgramName(
   prog
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        YesDeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          ConstantDeclaration(
            ConstDeclNoError(
              Type(
               int
              ) [Type]
              SingleConstDeclList(
                ConstDeclVariable(
                  ConstDeclName(
                   jedan
                  ) [ConstDeclName]
                  ConstDeclValueInt(
                   1
                  ) [ConstDeclValueInt]
                ) [ConstDeclVariable]
              ) [SingleConstDeclList]
            ) [ConstDeclNoError]
          ) [ConstantDeclaration]
        ) [YesDeclarationList]
        ConstantDeclaration(
          ConstDeclNoError(
            Type(
             int
            ) [Type]
            SingleConstDeclList(
              ConstDeclVariable(
                ConstDeclName(
                 pet
                ) [ConstDeclName]
                ConstDeclValueInt(
                 5
                ) [ConstDeclValueInt]
              ) [ConstDeclVariable]
            ) [SingleConstDeclList]
          ) [ConstDeclNoError]
        ) [ConstantDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               x
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         int
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             y
            ) [VarDeclName]
            NoVarDeclArrayOption(
            ) [NoVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      YesMethodVariables(
        NoMethodVariables(
        ) [NoMethodVariables]
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               a
              ) [VarDeclName]
              YesVarDeclArrayOption(
              ) [YesVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [YesMethodVariables]
      YesMethodBody(
        YesMethodBody(
          YesMethodBody(
            YesMethodBody(
              YesMethodBody(
                YesMethodBody(
                  YesMethodBody(
                    NoMethodBody(
                    ) [NoMethodBody]
                    DesignatorStatementDecl(
                      DesignatorStatement(
                        Designator(
                          DesignatorName(
                           a
                          ) [DesignatorName]
                          NoOptionalDesignator(
                          ) [NoOptionalDesignator]
                        ) [Designator]
                        PossibleErrorAssignOpDesignatorAddition(
                          AssignOpExprDesignatorAdditionNoError(
                            Assignop(
                            ) [Assignop]
                            NoTernaryExpr(
                              SingleCondFact(
                                TermFiniteExpr(
                                  FiniteTerm(
                                    FactorTerm(
                                      NewArrayFactor(
                                        Type(
                                         int
                                        ) [Type]
                                        NoTernaryExpr(
                                          SingleCondFact(
                                            TermFiniteExpr(
                                              FiniteTerm(
                                                FactorTerm(
                                                  IntFactor(
                                                   8
                                                  ) [IntFactor]
                                                ) [FactorTerm]
                                              ) [FiniteTerm]
                                              NoOptionalTermList(
                                              ) [NoOptionalTermList]
                                            ) [TermFiniteExpr]
                                          ) [SingleCondFact]
                                        ) [NoTernaryExpr]
                                      ) [NewArrayFactor]
                                    ) [FactorTerm]
                                  ) [FiniteTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [TermFiniteExpr]
                              ) [SingleCondFact]
                            ) [NoTernaryExpr]
                          ) [AssignOpExprDesignatorAdditionNoError]
                        ) [PossibleErrorAssignOpDesignatorAddition]
                      ) [DesignatorStatement]
                    ) [DesignatorStatementDecl]
                  ) [YesMethodBody]
                  DesignatorStatementDecl(
                    DesignatorStatement(
                      Designator(
                        DesignatorName(
                         a
                        ) [DesignatorName]
                        YesOptionalDesignator(
                          NoTernaryExpr(
                            SingleCondFact(
                              TermFiniteExpr(
                                FiniteTerm(
                                  FactorTerm(
                                    IntFactor(
                                     3
                                    ) [IntFactor]
                                  ) [FactorTerm]
                                ) [FiniteTerm]
                                NoOptionalTermList(
                                ) [NoOptionalTermList]
                              ) [TermFiniteExpr]
                            ) [SingleCondFact]
                          ) [NoTernaryExpr]
                        ) [YesOptionalDesignator]
                      ) [Designator]
                      PossibleErrorAssignOpDesignatorAddition(
                        AssignOpExprDesignatorAdditionNoError(
                          Assignop(
                          ) [Assignop]
                          NoTernaryExpr(
                            SingleCondFact(
                              TermFiniteExpr(
                                FiniteTerm(
                                  FactorTerm(
                                    IntFactor(
                                     1
                                    ) [IntFactor]
                                  ) [FactorTerm]
                                ) [FiniteTerm]
                                NoOptionalTermList(
                                ) [NoOptionalTermList]
                              ) [TermFiniteExpr]
                            ) [SingleCondFact]
                          ) [NoTernaryExpr]
                        ) [AssignOpExprDesignatorAdditionNoError]
                      ) [PossibleErrorAssignOpDesignatorAddition]
                    ) [DesignatorStatement]
                  ) [DesignatorStatementDecl]
                ) [YesMethodBody]
                DesignatorStatementDecl(
                  DesignatorStatement(
                    Designator(
                      DesignatorName(
                       a
                      ) [DesignatorName]
                      YesOptionalDesignator(
                        NoTernaryExpr(
                          SingleCondFact(
                            TermFiniteExpr(
                              FiniteTerm(
                                FactorTerm(
                                  IntFactor(
                                   3
                                  ) [IntFactor]
                                ) [FactorTerm]
                              ) [FiniteTerm]
                              NoOptionalTermList(
                              ) [NoOptionalTermList]
                            ) [TermFiniteExpr]
                          ) [SingleCondFact]
                        ) [NoTernaryExpr]
                      ) [YesOptionalDesignator]
                    ) [Designator]
                    IncrementDesignatorAddition(
                    ) [IncrementDesignatorAddition]
                  ) [DesignatorStatement]
                ) [DesignatorStatementDecl]
              ) [YesMethodBody]
              PrintStatementDecl(
                PrintStatement(
                  NoTernaryExpr(
                    SingleCondFact(
                      TermFiniteExpr(
                        FiniteTerm(
                          FactorTerm(
                            DesignatorFactor(
                              Designator(
                                DesignatorName(
                                 a
                                ) [DesignatorName]
                                YesOptionalDesignator(
                                  NoTernaryExpr(
                                    SingleCondFact(
                                      TermFiniteExpr(
                                        FiniteTerm(
                                          FactorTerm(
                                            IntFactor(
                                             3
                                            ) [IntFactor]
                                          ) [FactorTerm]
                                        ) [FiniteTerm]
                                        NoOptionalTermList(
                                        ) [NoOptionalTermList]
                                      ) [TermFiniteExpr]
                                    ) [SingleCondFact]
                                  ) [NoTernaryExpr]
                                ) [YesOptionalDesignator]
                              ) [Designator]
                            ) [DesignatorFactor]
                          ) [FactorTerm]
                        ) [FiniteTerm]
                        NoOptionalTermList(
                        ) [NoOptionalTermList]
                      ) [TermFiniteExpr]
                    ) [SingleCondFact]
                  ) [NoTernaryExpr]
                  OptionalNoPrintNumber(
                  ) [OptionalNoPrintNumber]
                ) [PrintStatement]
              ) [PrintStatementDecl]
            ) [YesMethodBody]
            DesignatorStatementDecl(
              DesignatorStatement(
                Designator(
                  DesignatorName(
                   a
                  ) [DesignatorName]
                  YesOptionalDesignator(
                    NoTernaryExpr(
                      SingleCondFact(
                        TermFiniteExpr(
                          FiniteTerm(
                            FactorTerm(
                              IntFactor(
                               3
                              ) [IntFactor]
                            ) [FactorTerm]
                          ) [FiniteTerm]
                          NoOptionalTermList(
                          ) [NoOptionalTermList]
                        ) [TermFiniteExpr]
                      ) [SingleCondFact]
                    ) [NoTernaryExpr]
                  ) [YesOptionalDesignator]
                ) [Designator]
                IncrementDesignatorAddition(
                ) [IncrementDesignatorAddition]
              ) [DesignatorStatement]
            ) [DesignatorStatementDecl]
          ) [YesMethodBody]
          PrintStatementDecl(
            PrintStatement(
              NoTernaryExpr(
                SingleCondFact(
                  TermFiniteExpr(
                    FiniteTerm(
                      FactorTerm(
                        DesignatorFactor(
                          Designator(
                            DesignatorName(
                             a
                            ) [DesignatorName]
                            YesOptionalDesignator(
                              NoTernaryExpr(
                                SingleCondFact(
                                  TermFiniteExpr(
                                    FiniteTerm(
                                      FactorTerm(
                                        IntFactor(
                                         3
                                        ) [IntFactor]
                                      ) [FactorTerm]
                                    ) [FiniteTerm]
                                    NoOptionalTermList(
                                    ) [NoOptionalTermList]
                                  ) [TermFiniteExpr]
                                ) [SingleCondFact]
                              ) [NoTernaryExpr]
                            ) [YesOptionalDesignator]
                          ) [Designator]
                        ) [DesignatorFactor]
                      ) [FactorTerm]
                    ) [FiniteTerm]
                    NoOptionalTermList(
                    ) [NoOptionalTermList]
                  ) [TermFiniteExpr]
                ) [SingleCondFact]
              ) [NoTernaryExpr]
              OptionalNoPrintNumber(
              ) [OptionalNoPrintNumber]
            ) [PrintStatement]
          ) [PrintStatementDecl]
        ) [YesMethodBody]
        DesignatorStatementDecl(
          DesignatorStatement(
            Designator(
              DesignatorName(
               x
              ) [DesignatorName]
              NoOptionalDesignator(
              ) [NoOptionalDesignator]
            ) [Designator]
            PossibleErrorAssignOpDesignatorAddition(
              AssignOpExprDesignatorAdditionNoError(
                Assignop(
                ) [Assignop]
                NoTernaryExpr(
                  SingleCondFact(
                    TermFiniteExpr(
                      FiniteTerm(
                        FactorTerm(
                          IntFactor(
                           4
                          ) [IntFactor]
                        ) [FactorTerm]
                      ) [FiniteTerm]
                      NoOptionalTermList(
                      ) [NoOptionalTermList]
                    ) [TermFiniteExpr]
                  ) [SingleCondFact]
                ) [NoTernaryExpr]
              ) [AssignOpExprDesignatorAdditionNoError]
            ) [PossibleErrorAssignOpDesignatorAddition]
          ) [DesignatorStatement]
        ) [DesignatorStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  15:21:56,036 - ======================SEMANTIC ANALYSIS======================
INFO  15:21:56,036 - Const variable jedan declared on line 3
INFO  15:21:56,036 - Const variable pet declared on line 4
INFO  15:21:56,036 - Global variable x declared on line 6
INFO  15:21:56,036 - Global variable y declared on line 7
INFO  15:21:56,036 - Method main declared on line 10
INFO  15:21:56,036 - Local array a declared on line 10
INFO  15:21:56,036 - Array a used: Var a: Array of int, 0, 1 on line 12
INFO  15:21:56,036 - Element of array a used: Elem a: int, 0, 1 on line 13
INFO  15:21:56,036 - Element of array a used: Elem a: int, 0, 1 on line 14
INFO  15:21:56,036 - Element of array a used: Elem a: int, 0, 1 on line 15
INFO  15:21:56,036 - Element of array a used: Elem a: int, 0, 1 on line 16
INFO  15:21:56,036 - Element of array a used: Elem a: int, 0, 1 on line 17
INFO  15:21:56,036 - Variable x used: Var x: int, 0, 0 on line 18
INFO  15:21:56,036 - =======================SYNTAX ANALYSIS=======================
INFO  15:21:56,036 - 1 methods in the program
INFO  15:21:56,036 - 2 constants declared
INFO  15:21:56,036 - 2 global variables declared
INFO  15:21:56,036 - 0 global arrays declared
INFO  15:21:56,036 - 0 local variables declared
INFO  15:21:56,036 - 1 local arrays declared
INFO  15:21:56,036 - 7 statements in main
INFO  15:21:56,036 - ================SEMANTIC ANALYSIS SUCCESSFUL=================
