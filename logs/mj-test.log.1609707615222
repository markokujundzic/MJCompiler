INFO  22:00:00,742 - Compiling source file: C:\Users\Asus\Desktop\FAKS\PP1\MJCompiler\test\program.mj
INFO  22:00:00,820 - #2 program
INFO  22:00:00,820 - #9 prog
INFO  22:00:00,820 - #5 const
INFO  22:00:00,820 - #9 int
INFO  22:00:00,820 - #9 jedan
INFO  22:00:00,820 - #8 =
INFO  22:00:00,820 - #10 1
INFO  22:00:00,820 - #6 ;
INFO  22:00:00,820 - #5 const
INFO  22:00:00,820 - #9 bool
INFO  22:00:00,820 - #9 tmp
INFO  22:00:00,820 - #8 =
INFO  22:00:00,820 - #11 true
INFO  22:00:00,820 - #6 ;
INFO  22:00:00,820 - #5 const
INFO  22:00:00,820 - #9 char
INFO  22:00:00,820 - #9 hh
INFO  22:00:00,820 - #8 =
INFO  22:00:00,820 - #12 f
INFO  22:00:00,820 - #6 ;
INFO  22:00:00,820 - #9 int
INFO  22:00:00,820 - #9 x
INFO  22:00:00,820 - #6 ;
INFO  22:00:00,820 - #9 int
INFO  22:00:00,820 - #9 y
INFO  22:00:00,820 - #20 [
INFO  22:00:00,820 - #21 ]
INFO  22:00:00,820 - #6 ;
INFO  22:00:00,835 - #9 bool
INFO  22:00:00,835 - #9 array
INFO  22:00:00,835 - #20 [
INFO  22:00:00,835 - #21 ]
INFO  22:00:00,835 - #6 ;
INFO  22:00:00,835 - #9 bool
INFO  22:00:00,835 - #9 a
INFO  22:00:00,835 - #7 ,
INFO  22:00:00,835 - #9 b
INFO  22:00:00,835 - #7 ,
INFO  22:00:00,835 - #9 c
INFO  22:00:00,835 - #7 ,
INFO  22:00:00,835 - #9 d
INFO  22:00:00,835 - #6 ;
INFO  22:00:00,835 - #9 char
INFO  22:00:00,835 - #9 r
INFO  22:00:00,835 - #6 ;
INFO  22:00:00,835 - #3 {
INFO  22:00:00,835 - #15 void
INFO  22:00:00,835 - #9 main
INFO  22:00:00,835 - #13 (
INFO  22:00:00,835 - #14 )
INFO  22:00:00,835 - #9 int
INFO  22:00:00,835 - #9 w
INFO  22:00:00,835 - #6 ;
INFO  22:00:00,835 - #9 bool
INFO  22:00:00,835 - #9 p
INFO  22:00:00,835 - #20 [
INFO  22:00:00,835 - #21 ]
INFO  22:00:00,835 - #6 ;
INFO  22:00:00,835 - #3 {
INFO  22:00:00,835 - #9 a
INFO  22:00:00,835 - #8 =
INFO  22:00:00,835 - #9 array
INFO  22:00:00,835 - #44 >=
INFO  22:00:00,835 - #9 p
INFO  22:00:00,835 - #6 ;
INFO  22:00:00,835 - #4 }
INFO  22:00:00,835 - #4 }
INFO  22:00:00,851 - Program(
  ProgramName(
   prog
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        YesDeclarationList(
          YesDeclarationList(
            YesDeclarationList(
              YesDeclarationList(
                YesDeclarationList(
                  NoDeclarationList(
                  ) [NoDeclarationList]
                  ConstantDeclaration(
                    ConstDeclNoError(
                      Type(
                       int
                      ) [Type]
                      SingleConstDeclList(
                        ConstDeclVariable(
                          ConstDeclName(
                           jedan
                          ) [ConstDeclName]
                          ConstDeclValueInt(
                           1
                          ) [ConstDeclValueInt]
                        ) [ConstDeclVariable]
                      ) [SingleConstDeclList]
                    ) [ConstDeclNoError]
                  ) [ConstantDeclaration]
                ) [YesDeclarationList]
                ConstantDeclaration(
                  ConstDeclNoError(
                    Type(
                     bool
                    ) [Type]
                    SingleConstDeclList(
                      ConstDeclVariable(
                        ConstDeclName(
                         tmp
                        ) [ConstDeclName]
                        ConstDeclValueBool(
                         true
                        ) [ConstDeclValueBool]
                      ) [ConstDeclVariable]
                    ) [SingleConstDeclList]
                  ) [ConstDeclNoError]
                ) [ConstantDeclaration]
              ) [YesDeclarationList]
              ConstantDeclaration(
                ConstDeclNoError(
                  Type(
                   char
                  ) [Type]
                  SingleConstDeclList(
                    ConstDeclVariable(
                      ConstDeclName(
                       hh
                      ) [ConstDeclName]
                      ConstDeclValueChar(
                       f
                      ) [ConstDeclValueChar]
                    ) [ConstDeclVariable]
                  ) [SingleConstDeclList]
                ) [ConstDeclNoError]
              ) [ConstantDeclaration]
            ) [YesDeclarationList]
            VariableDeclaration(
              VarDeclNoError(
                Type(
                 int
                ) [Type]
                SingleVarDeclList(
                  DeclVariable(
                    VarDeclName(
                     x
                    ) [VarDeclName]
                    NoVarDeclArrayOption(
                    ) [NoVarDeclArrayOption]
                  ) [DeclVariable]
                ) [SingleVarDeclList]
              ) [VarDeclNoError]
            ) [VariableDeclaration]
          ) [YesDeclarationList]
          VariableDeclaration(
            VarDeclNoError(
              Type(
               int
              ) [Type]
              SingleVarDeclList(
                DeclVariable(
                  VarDeclName(
                   y
                  ) [VarDeclName]
                  YesVarDeclArrayOption(
                  ) [YesVarDeclArrayOption]
                ) [DeclVariable]
              ) [SingleVarDeclList]
            ) [VarDeclNoError]
          ) [VariableDeclaration]
        ) [YesDeclarationList]
        VariableDeclaration(
          VarDeclNoError(
            Type(
             bool
            ) [Type]
            SingleVarDeclList(
              DeclVariable(
                VarDeclName(
                 array
                ) [VarDeclName]
                YesVarDeclArrayOption(
                ) [YesVarDeclArrayOption]
              ) [DeclVariable]
            ) [SingleVarDeclList]
          ) [VarDeclNoError]
        ) [VariableDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           bool
          ) [Type]
          PluralVarDeclList(
            PluralVarDeclList(
              PluralVarDeclList(
                SingleVarDeclList(
                  DeclVariable(
                    VarDeclName(
                     a
                    ) [VarDeclName]
                    NoVarDeclArrayOption(
                    ) [NoVarDeclArrayOption]
                  ) [DeclVariable]
                ) [SingleVarDeclList]
                DeclVariable(
                  VarDeclName(
                   b
                  ) [VarDeclName]
                  NoVarDeclArrayOption(
                  ) [NoVarDeclArrayOption]
                ) [DeclVariable]
              ) [PluralVarDeclList]
              DeclVariable(
                VarDeclName(
                 c
                ) [VarDeclName]
                NoVarDeclArrayOption(
                ) [NoVarDeclArrayOption]
              ) [DeclVariable]
            ) [PluralVarDeclList]
            DeclVariable(
              VarDeclName(
               d
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [PluralVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         char
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             r
            ) [VarDeclName]
            NoVarDeclArrayOption(
            ) [NoVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      YesMethodVariables(
        YesMethodVariables(
          NoMethodVariables(
          ) [NoMethodVariables]
          VarDeclNoError(
            Type(
             int
            ) [Type]
            SingleVarDeclList(
              DeclVariable(
                VarDeclName(
                 w
                ) [VarDeclName]
                NoVarDeclArrayOption(
                ) [NoVarDeclArrayOption]
              ) [DeclVariable]
            ) [SingleVarDeclList]
          ) [VarDeclNoError]
        ) [YesMethodVariables]
        VarDeclNoError(
          Type(
           bool
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               p
              ) [VarDeclName]
              YesVarDeclArrayOption(
              ) [YesVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [YesMethodVariables]
      YesMethodBody(
        NoMethodBody(
        ) [NoMethodBody]
        DesignatorStatementDecl(
          DesignatorStatement(
            Designator(
              DesignatorName(
               a
              ) [DesignatorName]
              NoOptionalDesignator(
              ) [NoOptionalDesignator]
            ) [Designator]
            PossibleErrorAssignOpDesignatorAddition(
              AssignOpExprDesignatorAdditionNoError(
                Assignop(
                ) [Assignop]
                NoTernaryExpr(
                  PluralCondFact(
                    TermFiniteExpr(
                      FactorTerm(
                        DesignatorFactor(
                          Designator(
                            DesignatorName(
                             array
                            ) [DesignatorName]
                            NoOptionalDesignator(
                            ) [NoOptionalDesignator]
                          ) [Designator]
                        ) [DesignatorFactor]
                      ) [FactorTerm]
                      NoOptionalTermList(
                      ) [NoOptionalTermList]
                    ) [TermFiniteExpr]
                    RelopGreaterOrEqual(
                    ) [RelopGreaterOrEqual]
                    TermFiniteExpr(
                      FactorTerm(
                        DesignatorFactor(
                          Designator(
                            DesignatorName(
                             p
                            ) [DesignatorName]
                            NoOptionalDesignator(
                            ) [NoOptionalDesignator]
                          ) [Designator]
                        ) [DesignatorFactor]
                      ) [FactorTerm]
                      NoOptionalTermList(
                      ) [NoOptionalTermList]
                    ) [TermFiniteExpr]
                  ) [PluralCondFact]
                ) [NoTernaryExpr]
              ) [AssignOpExprDesignatorAdditionNoError]
            ) [PossibleErrorAssignOpDesignatorAddition]
          ) [DesignatorStatement]
        ) [DesignatorStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  22:00:00,851 - ===================================
INFO  22:00:00,851 - Const variable jedan declared on line 3
INFO  22:00:00,851 - Const variable tmp declared on line 4
INFO  22:00:00,851 - Const variable hh declared on line 5
INFO  22:00:00,851 - Global variable x declared on line 7
INFO  22:00:00,851 - Global array y declared on line 8
INFO  22:00:00,851 - Global array array declared on line 9
INFO  22:00:00,851 - Global variable a declared on line 10
INFO  22:00:00,851 - Global variable b declared on line 10
INFO  22:00:00,851 - Global variable c declared on line 10
INFO  22:00:00,851 - Global variable d declared on line 10
INFO  22:00:00,851 - Global variable r declared on line 11
INFO  22:00:00,851 - Method main declared on line 13
INFO  22:00:00,851 - Local variable w declared on line 13
INFO  22:00:00,851 - Local array p declared on line 13
INFO  22:00:00,851 - Variable a used on line 15
INFO  22:00:00,851 - Array a used on line 15
INFO  22:00:00,851 - Array array used on line 15
INFO  22:00:00,851 - Array p used on line 15
ERROR 22:00:00,851 - Semantic Error: CondFact operands of array type on line 15 can only be compared for equality or non-equality
ERROR 22:00:00,867 - Semantic Error: Incompatible types where Expr is assigned to Designator on line 15
ERROR 22:00:00,867 - Parsing finished UNSUCCESSFULLY!
