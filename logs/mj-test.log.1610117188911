INFO  15:44:46,459 - ====================LEXICAL ANALYSIS========================
INFO  15:44:46,530 - #2 program
INFO  15:44:46,531 - #9 prog
INFO  15:44:46,531 - #5 const
INFO  15:44:46,532 - #9 int
INFO  15:44:46,532 - #9 jedan
INFO  15:44:46,533 - #8 =
INFO  15:44:46,534 - #10 1
INFO  15:44:46,534 - #6 ;
INFO  15:44:46,535 - #5 const
INFO  15:44:46,536 - #9 int
INFO  15:44:46,536 - #9 pet
INFO  15:44:46,536 - #8 =
INFO  15:44:46,536 - #10 5
INFO  15:44:46,536 - #6 ;
INFO  15:44:46,536 - #9 int
INFO  15:44:46,536 - #9 x
INFO  15:44:46,536 - #6 ;
INFO  15:44:46,539 - #9 int
INFO  15:44:46,539 - #9 y
INFO  15:44:46,539 - #6 ;
INFO  15:44:46,539 - #3 {
INFO  15:44:46,539 - #15 void
INFO  15:44:46,540 - #9 main
INFO  15:44:46,546 - #13 (
INFO  15:44:46,547 - #14 )
INFO  15:44:46,548 - #9 int
INFO  15:44:46,549 - #9 a
INFO  15:44:46,549 - #20 [
INFO  15:44:46,549 - #21 ]
INFO  15:44:46,549 - #6 ;
INFO  15:44:46,549 - #9 char
INFO  15:44:46,550 - #9 c
INFO  15:44:46,550 - #6 ;
INFO  15:44:46,550 - #3 {
INFO  15:44:46,550 - #9 a
INFO  15:44:46,551 - #8 =
INFO  15:44:46,552 - #35 new
INFO  15:44:46,553 - #9 int
INFO  15:44:46,553 - #20 [
INFO  15:44:46,553 - #10 8
INFO  15:44:46,553 - #21 ]
INFO  15:44:46,555 - #6 ;
INFO  15:44:46,556 - #9 a
INFO  15:44:46,556 - #20 [
INFO  15:44:46,556 - #10 3
INFO  15:44:46,556 - #21 ]
INFO  15:44:46,560 - #8 =
INFO  15:44:46,560 - #10 1
INFO  15:44:46,560 - #6 ;
INFO  15:44:46,560 - #9 a
INFO  15:44:46,560 - #20 [
INFO  15:44:46,560 - #10 3
INFO  15:44:46,560 - #21 ]
INFO  15:44:46,560 - #22 ++
INFO  15:44:46,560 - #6 ;
INFO  15:44:46,561 - #30 print
INFO  15:44:46,561 - #13 (
INFO  15:44:46,561 - #9 a
INFO  15:44:46,561 - #20 [
INFO  15:44:46,561 - #10 3
INFO  15:44:46,561 - #21 ]
INFO  15:44:46,562 - #14 )
INFO  15:44:46,563 - #6 ;
INFO  15:44:46,563 - #9 a
INFO  15:44:46,564 - #20 [
INFO  15:44:46,564 - #10 3
INFO  15:44:46,564 - #21 ]
INFO  15:44:46,564 - #22 ++
INFO  15:44:46,564 - #6 ;
INFO  15:44:46,564 - #30 print
INFO  15:44:46,564 - #13 (
INFO  15:44:46,564 - #9 a
INFO  15:44:46,564 - #20 [
INFO  15:44:46,564 - #10 3
INFO  15:44:46,564 - #21 ]
INFO  15:44:46,565 - #14 )
INFO  15:44:46,565 - #6 ;
INFO  15:44:46,565 - #9 x
INFO  15:44:46,565 - #8 =
INFO  15:44:46,565 - #10 4
INFO  15:44:46,565 - #6 ;
INFO  15:44:46,565 - #30 print
INFO  15:44:46,565 - #13 (
INFO  15:44:46,565 - #9 x
INFO  15:44:46,565 - #14 )
INFO  15:44:46,565 - #6 ;
INFO  15:44:46,565 - #9 x
INFO  15:44:46,565 - #22 ++
INFO  15:44:46,565 - #6 ;
INFO  15:44:46,565 - #30 print
INFO  15:44:46,566 - #13 (
INFO  15:44:46,566 - #9 x
INFO  15:44:46,566 - #14 )
INFO  15:44:46,566 - #6 ;
INFO  15:44:46,566 - #4 }
INFO  15:44:46,566 - #4 }
INFO  15:44:46,577 - =======================SYNTAX TREE===========================
INFO  15:44:46,579 - Program(
  ProgramName(
   prog
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        YesDeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          ConstantDeclaration(
            ConstDeclNoError(
              Type(
               int
              ) [Type]
              SingleConstDeclList(
                ConstDeclVariable(
                  ConstDeclName(
                   jedan
                  ) [ConstDeclName]
                  ConstDeclValueInt(
                   1
                  ) [ConstDeclValueInt]
                ) [ConstDeclVariable]
              ) [SingleConstDeclList]
            ) [ConstDeclNoError]
          ) [ConstantDeclaration]
        ) [YesDeclarationList]
        ConstantDeclaration(
          ConstDeclNoError(
            Type(
             int
            ) [Type]
            SingleConstDeclList(
              ConstDeclVariable(
                ConstDeclName(
                 pet
                ) [ConstDeclName]
                ConstDeclValueInt(
                 5
                ) [ConstDeclValueInt]
              ) [ConstDeclVariable]
            ) [SingleConstDeclList]
          ) [ConstDeclNoError]
        ) [ConstantDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               x
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         int
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             y
            ) [VarDeclName]
            NoVarDeclArrayOption(
            ) [NoVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      YesMethodVariables(
        YesMethodVariables(
          NoMethodVariables(
          ) [NoMethodVariables]
          VarDeclNoError(
            Type(
             int
            ) [Type]
            SingleVarDeclList(
              DeclVariable(
                VarDeclName(
                 a
                ) [VarDeclName]
                YesVarDeclArrayOption(
                ) [YesVarDeclArrayOption]
              ) [DeclVariable]
            ) [SingleVarDeclList]
          ) [VarDeclNoError]
        ) [YesMethodVariables]
        VarDeclNoError(
          Type(
           char
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               c
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [YesMethodVariables]
      YesMethodBody(
        YesMethodBody(
          YesMethodBody(
            YesMethodBody(
              YesMethodBody(
                YesMethodBody(
                  YesMethodBody(
                    YesMethodBody(
                      YesMethodBody(
                        YesMethodBody(
                          NoMethodBody(
                          ) [NoMethodBody]
                          DesignatorStatementDecl(
                            DesignatorStatement(
                              Designator(
                                DesignatorName(
                                 a
                                ) [DesignatorName]
                                NoOptionalDesignator(
                                ) [NoOptionalDesignator]
                              ) [Designator]
                              PossibleErrorAssignOpDesignatorAddition(
                                AssignOpExprDesignatorAdditionNoError(
                                  Assignop(
                                  ) [Assignop]
                                  NoTernaryExpr(
                                    SingleCondFact(
                                      TermFiniteExpr(
                                        FiniteTerm(
                                          FactorTerm(
                                            NewArrayFactor(
                                              Type(
                                               int
                                              ) [Type]
                                              NoTernaryExpr(
                                                SingleCondFact(
                                                  TermFiniteExpr(
                                                    FiniteTerm(
                                                      FactorTerm(
                                                        IntFactor(
                                                         8
                                                        ) [IntFactor]
                                                      ) [FactorTerm]
                                                    ) [FiniteTerm]
                                                    NoOptionalTermList(
                                                    ) [NoOptionalTermList]
                                                  ) [TermFiniteExpr]
                                                ) [SingleCondFact]
                                              ) [NoTernaryExpr]
                                            ) [NewArrayFactor]
                                          ) [FactorTerm]
                                        ) [FiniteTerm]
                                        NoOptionalTermList(
                                        ) [NoOptionalTermList]
                                      ) [TermFiniteExpr]
                                    ) [SingleCondFact]
                                  ) [NoTernaryExpr]
                                ) [AssignOpExprDesignatorAdditionNoError]
                              ) [PossibleErrorAssignOpDesignatorAddition]
                            ) [DesignatorStatement]
                          ) [DesignatorStatementDecl]
                        ) [YesMethodBody]
                        DesignatorStatementDecl(
                          DesignatorStatement(
                            Designator(
                              DesignatorName(
                               a
                              ) [DesignatorName]
                              YesOptionalDesignator(
                                NoTernaryExpr(
                                  SingleCondFact(
                                    TermFiniteExpr(
                                      FiniteTerm(
                                        FactorTerm(
                                          IntFactor(
                                           3
                                          ) [IntFactor]
                                        ) [FactorTerm]
                                      ) [FiniteTerm]
                                      NoOptionalTermList(
                                      ) [NoOptionalTermList]
                                    ) [TermFiniteExpr]
                                  ) [SingleCondFact]
                                ) [NoTernaryExpr]
                              ) [YesOptionalDesignator]
                            ) [Designator]
                            PossibleErrorAssignOpDesignatorAddition(
                              AssignOpExprDesignatorAdditionNoError(
                                Assignop(
                                ) [Assignop]
                                NoTernaryExpr(
                                  SingleCondFact(
                                    TermFiniteExpr(
                                      FiniteTerm(
                                        FactorTerm(
                                          IntFactor(
                                           1
                                          ) [IntFactor]
                                        ) [FactorTerm]
                                      ) [FiniteTerm]
                                      NoOptionalTermList(
                                      ) [NoOptionalTermList]
                                    ) [TermFiniteExpr]
                                  ) [SingleCondFact]
                                ) [NoTernaryExpr]
                              ) [AssignOpExprDesignatorAdditionNoError]
                            ) [PossibleErrorAssignOpDesignatorAddition]
                          ) [DesignatorStatement]
                        ) [DesignatorStatementDecl]
                      ) [YesMethodBody]
                      DesignatorStatementDecl(
                        DesignatorStatement(
                          Designator(
                            DesignatorName(
                             a
                            ) [DesignatorName]
                            YesOptionalDesignator(
                              NoTernaryExpr(
                                SingleCondFact(
                                  TermFiniteExpr(
                                    FiniteTerm(
                                      FactorTerm(
                                        IntFactor(
                                         3
                                        ) [IntFactor]
                                      ) [FactorTerm]
                                    ) [FiniteTerm]
                                    NoOptionalTermList(
                                    ) [NoOptionalTermList]
                                  ) [TermFiniteExpr]
                                ) [SingleCondFact]
                              ) [NoTernaryExpr]
                            ) [YesOptionalDesignator]
                          ) [Designator]
                          IncrementDesignatorAddition(
                          ) [IncrementDesignatorAddition]
                        ) [DesignatorStatement]
                      ) [DesignatorStatementDecl]
                    ) [YesMethodBody]
                    PrintStatementDecl(
                      PrintStatement(
                        NoTernaryExpr(
                          SingleCondFact(
                            TermFiniteExpr(
                              FiniteTerm(
                                FactorTerm(
                                  DesignatorFactor(
                                    Designator(
                                      DesignatorName(
                                       a
                                      ) [DesignatorName]
                                      YesOptionalDesignator(
                                        NoTernaryExpr(
                                          SingleCondFact(
                                            TermFiniteExpr(
                                              FiniteTerm(
                                                FactorTerm(
                                                  IntFactor(
                                                   3
                                                  ) [IntFactor]
                                                ) [FactorTerm]
                                              ) [FiniteTerm]
                                              NoOptionalTermList(
                                              ) [NoOptionalTermList]
                                            ) [TermFiniteExpr]
                                          ) [SingleCondFact]
                                        ) [NoTernaryExpr]
                                      ) [YesOptionalDesignator]
                                    ) [Designator]
                                  ) [DesignatorFactor]
                                ) [FactorTerm]
                              ) [FiniteTerm]
                              NoOptionalTermList(
                              ) [NoOptionalTermList]
                            ) [TermFiniteExpr]
                          ) [SingleCondFact]
                        ) [NoTernaryExpr]
                        OptionalNoPrintNumber(
                        ) [OptionalNoPrintNumber]
                      ) [PrintStatement]
                    ) [PrintStatementDecl]
                  ) [YesMethodBody]
                  DesignatorStatementDecl(
                    DesignatorStatement(
                      Designator(
                        DesignatorName(
                         a
                        ) [DesignatorName]
                        YesOptionalDesignator(
                          NoTernaryExpr(
                            SingleCondFact(
                              TermFiniteExpr(
                                FiniteTerm(
                                  FactorTerm(
                                    IntFactor(
                                     3
                                    ) [IntFactor]
                                  ) [FactorTerm]
                                ) [FiniteTerm]
                                NoOptionalTermList(
                                ) [NoOptionalTermList]
                              ) [TermFiniteExpr]
                            ) [SingleCondFact]
                          ) [NoTernaryExpr]
                        ) [YesOptionalDesignator]
                      ) [Designator]
                      IncrementDesignatorAddition(
                      ) [IncrementDesignatorAddition]
                    ) [DesignatorStatement]
                  ) [DesignatorStatementDecl]
                ) [YesMethodBody]
                PrintStatementDecl(
                  PrintStatement(
                    NoTernaryExpr(
                      SingleCondFact(
                        TermFiniteExpr(
                          FiniteTerm(
                            FactorTerm(
                              DesignatorFactor(
                                Designator(
                                  DesignatorName(
                                   a
                                  ) [DesignatorName]
                                  YesOptionalDesignator(
                                    NoTernaryExpr(
                                      SingleCondFact(
                                        TermFiniteExpr(
                                          FiniteTerm(
                                            FactorTerm(
                                              IntFactor(
                                               3
                                              ) [IntFactor]
                                            ) [FactorTerm]
                                          ) [FiniteTerm]
                                          NoOptionalTermList(
                                          ) [NoOptionalTermList]
                                        ) [TermFiniteExpr]
                                      ) [SingleCondFact]
                                    ) [NoTernaryExpr]
                                  ) [YesOptionalDesignator]
                                ) [Designator]
                              ) [DesignatorFactor]
                            ) [FactorTerm]
                          ) [FiniteTerm]
                          NoOptionalTermList(
                          ) [NoOptionalTermList]
                        ) [TermFiniteExpr]
                      ) [SingleCondFact]
                    ) [NoTernaryExpr]
                    OptionalNoPrintNumber(
                    ) [OptionalNoPrintNumber]
                  ) [PrintStatement]
                ) [PrintStatementDecl]
              ) [YesMethodBody]
              DesignatorStatementDecl(
                DesignatorStatement(
                  Designator(
                    DesignatorName(
                     x
                    ) [DesignatorName]
                    NoOptionalDesignator(
                    ) [NoOptionalDesignator]
                  ) [Designator]
                  PossibleErrorAssignOpDesignatorAddition(
                    AssignOpExprDesignatorAdditionNoError(
                      Assignop(
                      ) [Assignop]
                      NoTernaryExpr(
                        SingleCondFact(
                          TermFiniteExpr(
                            FiniteTerm(
                              FactorTerm(
                                IntFactor(
                                 4
                                ) [IntFactor]
                              ) [FactorTerm]
                            ) [FiniteTerm]
                            NoOptionalTermList(
                            ) [NoOptionalTermList]
                          ) [TermFiniteExpr]
                        ) [SingleCondFact]
                      ) [NoTernaryExpr]
                    ) [AssignOpExprDesignatorAdditionNoError]
                  ) [PossibleErrorAssignOpDesignatorAddition]
                ) [DesignatorStatement]
              ) [DesignatorStatementDecl]
            ) [YesMethodBody]
            PrintStatementDecl(
              PrintStatement(
                NoTernaryExpr(
                  SingleCondFact(
                    TermFiniteExpr(
                      FiniteTerm(
                        FactorTerm(
                          DesignatorFactor(
                            Designator(
                              DesignatorName(
                               x
                              ) [DesignatorName]
                              NoOptionalDesignator(
                              ) [NoOptionalDesignator]
                            ) [Designator]
                          ) [DesignatorFactor]
                        ) [FactorTerm]
                      ) [FiniteTerm]
                      NoOptionalTermList(
                      ) [NoOptionalTermList]
                    ) [TermFiniteExpr]
                  ) [SingleCondFact]
                ) [NoTernaryExpr]
                OptionalNoPrintNumber(
                ) [OptionalNoPrintNumber]
              ) [PrintStatement]
            ) [PrintStatementDecl]
          ) [YesMethodBody]
          DesignatorStatementDecl(
            DesignatorStatement(
              Designator(
                DesignatorName(
                 x
                ) [DesignatorName]
                NoOptionalDesignator(
                ) [NoOptionalDesignator]
              ) [Designator]
              IncrementDesignatorAddition(
              ) [IncrementDesignatorAddition]
            ) [DesignatorStatement]
          ) [DesignatorStatementDecl]
        ) [YesMethodBody]
        PrintStatementDecl(
          PrintStatement(
            NoTernaryExpr(
              SingleCondFact(
                TermFiniteExpr(
                  FiniteTerm(
                    FactorTerm(
                      DesignatorFactor(
                        Designator(
                          DesignatorName(
                           x
                          ) [DesignatorName]
                          NoOptionalDesignator(
                          ) [NoOptionalDesignator]
                        ) [Designator]
                      ) [DesignatorFactor]
                    ) [FactorTerm]
                  ) [FiniteTerm]
                  NoOptionalTermList(
                  ) [NoOptionalTermList]
                ) [TermFiniteExpr]
              ) [SingleCondFact]
            ) [NoTernaryExpr]
            OptionalNoPrintNumber(
            ) [OptionalNoPrintNumber]
          ) [PrintStatement]
        ) [PrintStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  15:44:46,580 - ======================SEMANTIC ANALYSIS======================
INFO  15:44:46,584 - Const variable jedan declared on line 3
INFO  15:44:46,584 - Const variable pet declared on line 4
INFO  15:44:46,584 - Global variable x declared on line 6
INFO  15:44:46,584 - Global variable y declared on line 7
INFO  15:44:46,584 - Method main declared on line 10
INFO  15:44:46,584 - Local array a declared on line 10
INFO  15:44:46,584 - Local variable c declared on line 10
INFO  15:44:46,584 - Array a used: Var a: Array of int, 0, 1 on line 12
INFO  15:44:46,585 - Element of array a used: Elem a: int, 0, 1 on line 13
INFO  15:44:46,585 - Element of array a used: Elem a: int, 0, 1 on line 14
INFO  15:44:46,585 - Element of array a used: Elem a: int, 0, 1 on line 15
INFO  15:44:46,585 - Element of array a used: Elem a: int, 0, 1 on line 16
INFO  15:44:46,585 - Element of array a used: Elem a: int, 0, 1 on line 17
INFO  15:44:46,585 - Variable x used: Var x: int, 0, 0 on line 18
INFO  15:44:46,585 - Variable x used: Var x: int, 0, 0 on line 19
INFO  15:44:46,586 - Variable x used: Var x: int, 0, 0 on line 20
INFO  15:44:46,586 - Variable x used: Var x: int, 0, 0 on line 21
INFO  15:44:46,586 - =======================SYNTAX ANALYSIS=======================
INFO  15:44:46,586 - 1 methods in the program
INFO  15:44:46,586 - 2 constants declared
INFO  15:44:46,586 - 2 global variables declared
INFO  15:44:46,586 - 0 global arrays declared
INFO  15:44:46,586 - 1 local variables declared
INFO  15:44:46,586 - 1 local arrays declared
INFO  15:44:46,586 - 10 statements in main
INFO  15:44:46,594 - ================SEMANTIC ANALYSIS SUCCESSFUL=================
