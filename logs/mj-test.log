INFO  16:47:41,896 - ====================LEXICAL ANALYSIS========================
INFO  16:47:41,980 - #2 program
INFO  16:47:41,981 - #9 prog
INFO  16:47:41,981 - #5 const
INFO  16:47:41,982 - #9 int
INFO  16:47:41,982 - #9 konstanta
INFO  16:47:41,983 - #8 =
INFO  16:47:41,984 - #10 5
INFO  16:47:41,984 - #6 ;
INFO  16:47:41,985 - #9 int
INFO  16:47:41,985 - #9 x
INFO  16:47:41,985 - #6 ;
INFO  16:47:41,988 - #9 int
INFO  16:47:41,988 - #9 y
INFO  16:47:41,988 - #6 ;
INFO  16:47:41,988 - #9 int
INFO  16:47:41,988 - #9 z
INFO  16:47:41,989 - #6 ;
INFO  16:47:41,989 - #3 {
INFO  16:47:41,989 - #15 void
INFO  16:47:41,989 - #9 main
INFO  16:47:41,990 - #13 (
INFO  16:47:41,991 - #14 )
INFO  16:47:41,991 - #3 {
INFO  16:47:41,998 - #9 x
INFO  16:47:41,999 - #8 =
INFO  16:47:42,002 - #34 -
INFO  16:47:42,003 - #10 1
INFO  16:47:42,003 - #37 *
INFO  16:47:42,003 - #13 (
INFO  16:47:42,005 - #10 7
INFO  16:47:42,005 - #36 +
INFO  16:47:42,007 - #10 3
INFO  16:47:42,008 - #34 -
INFO  16:47:42,008 - #9 konstanta
INFO  16:47:42,009 - #14 )
INFO  16:47:42,010 - #37 *
INFO  16:47:42,010 - #13 (
INFO  16:47:42,010 - #34 -
INFO  16:47:42,010 - #10 1
INFO  16:47:42,010 - #37 *
INFO  16:47:42,010 - #9 konstanta
INFO  16:47:42,010 - #36 +
INFO  16:47:42,010 - #10 4
INFO  16:47:42,010 - #14 )
INFO  16:47:42,010 - #6 ;
INFO  16:47:42,011 - #30 print
INFO  16:47:42,015 - #13 (
INFO  16:47:42,015 - #9 x
INFO  16:47:42,015 - #39 %
INFO  16:47:42,015 - #10 3
INFO  16:47:42,016 - #14 )
INFO  16:47:42,017 - #6 ;
INFO  16:47:42,017 - #9 y
INFO  16:47:42,018 - #8 =
INFO  16:47:42,018 - #34 -
INFO  16:47:42,018 - #10 8
INFO  16:47:42,018 - #34 -
INFO  16:47:42,018 - #10 2
INFO  16:47:42,018 - #37 *
INFO  16:47:42,019 - #10 3
INFO  16:47:42,019 - #6 ;
INFO  16:47:42,019 - #30 print
INFO  16:47:42,019 - #13 (
INFO  16:47:42,019 - #9 y
INFO  16:47:42,019 - #14 )
INFO  16:47:42,019 - #6 ;
INFO  16:47:42,019 - #4 }
INFO  16:47:42,019 - #4 }
INFO  16:47:42,030 - =======================SYNTAX TREE===========================
INFO  16:47:42,032 - Program(
  ProgramName(
   prog
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        YesDeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          ConstantDeclaration(
            ConstDeclNoError(
              Type(
               int
              ) [Type]
              SingleConstDeclList(
                ConstDeclVariable(
                  ConstDeclName(
                   konstanta
                  ) [ConstDeclName]
                  ConstDeclValueInt(
                   5
                  ) [ConstDeclValueInt]
                ) [ConstDeclVariable]
              ) [SingleConstDeclList]
            ) [ConstDeclNoError]
          ) [ConstantDeclaration]
        ) [YesDeclarationList]
        VariableDeclaration(
          VarDeclNoError(
            Type(
             int
            ) [Type]
            SingleVarDeclList(
              DeclVariable(
                VarDeclName(
                 x
                ) [VarDeclName]
                NoVarDeclArrayOption(
                ) [NoVarDeclArrayOption]
              ) [DeclVariable]
            ) [SingleVarDeclList]
          ) [VarDeclNoError]
        ) [VariableDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               y
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         int
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             z
            ) [VarDeclName]
            NoVarDeclArrayOption(
            ) [NoVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      NoMethodVariables(
      ) [NoMethodVariables]
      YesMethodBody(
        YesMethodBody(
          YesMethodBody(
            YesMethodBody(
              NoMethodBody(
              ) [NoMethodBody]
              DesignatorStatementDecl(
                DesignatorStatement(
                  Designator(
                    DesignatorName(
                     x
                    ) [DesignatorName]
                    NoOptionalDesignator(
                    ) [NoOptionalDesignator]
                  ) [Designator]
                  PossibleErrorAssignOpDesignatorAddition(
                    AssignOpExprDesignatorAdditionNoError(
                      Assignop(
                      ) [Assignop]
                      NoTernaryExpr(
                        SingleCondFact(
                          MinusTermFiniteExpr(
                            FiniteTerm(
                              MulopTerm(
                                MulopTerm(
                                  FactorTerm(
                                    IntFactor(
                                     1
                                    ) [IntFactor]
                                  ) [FactorTerm]
                                  MulopMul(
                                  ) [MulopMul]
                                  ExprFactor(
                                    NoTernaryExpr(
                                      SingleCondFact(
                                        TermFiniteExpr(
                                          FiniteTerm(
                                            FactorTerm(
                                              IntFactor(
                                               7
                                              ) [IntFactor]
                                            ) [FactorTerm]
                                          ) [FiniteTerm]
                                          YesOptionalTermList(
                                            YesOptionalTermList(
                                              NoOptionalTermList(
                                              ) [NoOptionalTermList]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              FiniteTerm(
                                                FactorTerm(
                                                  IntFactor(
                                                   3
                                                  ) [IntFactor]
                                                ) [FactorTerm]
                                              ) [FiniteTerm]
                                            ) [YesOptionalTermList]
                                            AddopMinus(
                                            ) [AddopMinus]
                                            FiniteTerm(
                                              FactorTerm(
                                                DesignatorFactor(
                                                  Designator(
                                                    DesignatorName(
                                                     konstanta
                                                    ) [DesignatorName]
                                                    NoOptionalDesignator(
                                                    ) [NoOptionalDesignator]
                                                  ) [Designator]
                                                ) [DesignatorFactor]
                                              ) [FactorTerm]
                                            ) [FiniteTerm]
                                          ) [YesOptionalTermList]
                                        ) [TermFiniteExpr]
                                      ) [SingleCondFact]
                                    ) [NoTernaryExpr]
                                  ) [ExprFactor]
                                ) [MulopTerm]
                                MulopMul(
                                ) [MulopMul]
                                ExprFactor(
                                  NoTernaryExpr(
                                    SingleCondFact(
                                      MinusTermFiniteExpr(
                                        FiniteTerm(
                                          MulopTerm(
                                            FactorTerm(
                                              IntFactor(
                                               1
                                              ) [IntFactor]
                                            ) [FactorTerm]
                                            MulopMul(
                                            ) [MulopMul]
                                            DesignatorFactor(
                                              Designator(
                                                DesignatorName(
                                                 konstanta
                                                ) [DesignatorName]
                                                NoOptionalDesignator(
                                                ) [NoOptionalDesignator]
                                              ) [Designator]
                                            ) [DesignatorFactor]
                                          ) [MulopTerm]
                                        ) [FiniteTerm]
                                        YesOptionalTermList(
                                          NoOptionalTermList(
                                          ) [NoOptionalTermList]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          FiniteTerm(
                                            FactorTerm(
                                              IntFactor(
                                               4
                                              ) [IntFactor]
                                            ) [FactorTerm]
                                          ) [FiniteTerm]
                                        ) [YesOptionalTermList]
                                      ) [MinusTermFiniteExpr]
                                    ) [SingleCondFact]
                                  ) [NoTernaryExpr]
                                ) [ExprFactor]
                              ) [MulopTerm]
                            ) [FiniteTerm]
                            NoOptionalTermList(
                            ) [NoOptionalTermList]
                          ) [MinusTermFiniteExpr]
                        ) [SingleCondFact]
                      ) [NoTernaryExpr]
                    ) [AssignOpExprDesignatorAdditionNoError]
                  ) [PossibleErrorAssignOpDesignatorAddition]
                ) [DesignatorStatement]
              ) [DesignatorStatementDecl]
            ) [YesMethodBody]
            PrintStatementDecl(
              PrintStatement(
                NoTernaryExpr(
                  SingleCondFact(
                    TermFiniteExpr(
                      FiniteTerm(
                        MulopTerm(
                          FactorTerm(
                            DesignatorFactor(
                              Designator(
                                DesignatorName(
                                 x
                                ) [DesignatorName]
                                NoOptionalDesignator(
                                ) [NoOptionalDesignator]
                              ) [Designator]
                            ) [DesignatorFactor]
                          ) [FactorTerm]
                          MulopMod(
                          ) [MulopMod]
                          IntFactor(
                           3
                          ) [IntFactor]
                        ) [MulopTerm]
                      ) [FiniteTerm]
                      NoOptionalTermList(
                      ) [NoOptionalTermList]
                    ) [TermFiniteExpr]
                  ) [SingleCondFact]
                ) [NoTernaryExpr]
                OptionalNoPrintNumber(
                ) [OptionalNoPrintNumber]
              ) [PrintStatement]
            ) [PrintStatementDecl]
          ) [YesMethodBody]
          DesignatorStatementDecl(
            DesignatorStatement(
              Designator(
                DesignatorName(
                 y
                ) [DesignatorName]
                NoOptionalDesignator(
                ) [NoOptionalDesignator]
              ) [Designator]
              PossibleErrorAssignOpDesignatorAddition(
                AssignOpExprDesignatorAdditionNoError(
                  Assignop(
                  ) [Assignop]
                  NoTernaryExpr(
                    SingleCondFact(
                      MinusTermFiniteExpr(
                        FiniteTerm(
                          FactorTerm(
                            IntFactor(
                             8
                            ) [IntFactor]
                          ) [FactorTerm]
                        ) [FiniteTerm]
                        YesOptionalTermList(
                          NoOptionalTermList(
                          ) [NoOptionalTermList]
                          AddopMinus(
                          ) [AddopMinus]
                          FiniteTerm(
                            MulopTerm(
                              FactorTerm(
                                IntFactor(
                                 2
                                ) [IntFactor]
                              ) [FactorTerm]
                              MulopMul(
                              ) [MulopMul]
                              IntFactor(
                               3
                              ) [IntFactor]
                            ) [MulopTerm]
                          ) [FiniteTerm]
                        ) [YesOptionalTermList]
                      ) [MinusTermFiniteExpr]
                    ) [SingleCondFact]
                  ) [NoTernaryExpr]
                ) [AssignOpExprDesignatorAdditionNoError]
              ) [PossibleErrorAssignOpDesignatorAddition]
            ) [DesignatorStatement]
          ) [DesignatorStatementDecl]
        ) [YesMethodBody]
        PrintStatementDecl(
          PrintStatement(
            NoTernaryExpr(
              SingleCondFact(
                TermFiniteExpr(
                  FiniteTerm(
                    FactorTerm(
                      DesignatorFactor(
                        Designator(
                          DesignatorName(
                           y
                          ) [DesignatorName]
                          NoOptionalDesignator(
                          ) [NoOptionalDesignator]
                        ) [Designator]
                      ) [DesignatorFactor]
                    ) [FactorTerm]
                  ) [FiniteTerm]
                  NoOptionalTermList(
                  ) [NoOptionalTermList]
                ) [TermFiniteExpr]
              ) [SingleCondFact]
            ) [NoTernaryExpr]
            OptionalNoPrintNumber(
            ) [OptionalNoPrintNumber]
          ) [PrintStatement]
        ) [PrintStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  16:47:42,033 - ======================SEMANTIC ANALYSIS======================
INFO  16:47:42,036 - Const variable konstanta declared on line 3
INFO  16:47:42,037 - Global variable x declared on line 5
INFO  16:47:42,037 - Global variable y declared on line 5
INFO  16:47:42,037 - Global variable z declared on line 5
INFO  16:47:42,037 - Method main declared on line 8
INFO  16:47:42,037 - Variable x used: Var x: int, 0, 0  on line 10
INFO  16:47:42,038 - Variable konstanta used: Con konstanta: int, 5, 0  on line 10
INFO  16:47:42,038 - Variable konstanta used: Con konstanta: int, 5, 0  on line 10
INFO  16:47:42,039 - Variable x used: Var x: int, 0, 0  on line 11
INFO  16:47:42,039 - Variable y used: Var y: int, 1, 0  on line 13
INFO  16:47:42,039 - Variable y used: Var y: int, 1, 0  on line 14
INFO  16:47:42,040 - =======================SYNTAX ANALYSIS=======================
INFO  16:47:42,040 - 1 methods in the program
INFO  16:47:42,040 - 1 constants declared
INFO  16:47:42,040 - 3 global variables declared
INFO  16:47:42,040 - 0 global arrays declared
INFO  16:47:42,040 - 0 local variables declared
INFO  16:47:42,040 - 0 local arrays declared
INFO  16:47:42,040 - 4 statements in main
INFO  16:47:42,041 - ================SEMANTIC ANALYSIS SUCCESSFUL=================
INFO  16:47:42,047 - ==============COMPILATION FINISHED SUCCESSFULLY==============
