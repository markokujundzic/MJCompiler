INFO  20:31:39,130 - Compiling source file: C:\Users\Asus\Desktop\FAKS\PP1\MJCompiler\test\semanticErrors.mj
INFO  20:31:39,209 - #2 program
INFO  20:31:39,209 - #9 semanticErrors
INFO  20:31:39,209 - #5 const
INFO  20:31:39,224 - #9 int
INFO  20:31:39,224 - #9 constInt
INFO  20:31:39,224 - #8 =
INFO  20:31:39,224 - #10 1
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #5 const
INFO  20:31:39,224 - #9 char
INFO  20:31:39,224 - #9 constChar
INFO  20:31:39,224 - #8 =
INFO  20:31:39,224 - #12 x
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #5 const
INFO  20:31:39,224 - #9 bool
INFO  20:31:39,224 - #9 constBool
INFO  20:31:39,224 - #8 =
INFO  20:31:39,224 - #11 true
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #5 const
INFO  20:31:39,224 - #9 int
INFO  20:31:39,224 - #9 constErrorInt
INFO  20:31:39,224 - #8 =
INFO  20:31:39,224 - #11 true
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #5 const
INFO  20:31:39,224 - #9 char
INFO  20:31:39,224 - #9 constErrorChar
INFO  20:31:39,224 - #8 =
INFO  20:31:39,224 - #10 5
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #5 const
INFO  20:31:39,224 - #9 bool
INFO  20:31:39,224 - #9 constErrorBool
INFO  20:31:39,224 - #8 =
INFO  20:31:39,224 - #12 h
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #5 const
INFO  20:31:39,224 - #9 int
INFO  20:31:39,224 - #9 constInt
INFO  20:31:39,224 - #8 =
INFO  20:31:39,224 - #10 3
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #9 int
INFO  20:31:39,224 - #9 x
INFO  20:31:39,224 - #20 [
INFO  20:31:39,224 - #21 ]
INFO  20:31:39,224 - #7 ,
INFO  20:31:39,224 - #9 y
INFO  20:31:39,224 - #20 [
INFO  20:31:39,224 - #21 ]
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #9 bool
INFO  20:31:39,224 - #9 b
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #9 char
INFO  20:31:39,224 - #9 c
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #9 string
INFO  20:31:39,224 - #9 s
INFO  20:31:39,224 - #6 ;
INFO  20:31:39,224 - #3 {
INFO  20:31:39,224 - #15 void
INFO  20:31:39,240 - #9 main
INFO  20:31:39,240 - #13 (
INFO  20:31:39,240 - #14 )
INFO  20:31:39,240 - #9 int
INFO  20:31:39,240 - #9 tmp
INFO  20:31:39,240 - #6 ;
INFO  20:31:39,240 - #3 {
INFO  20:31:39,240 - #9 b
INFO  20:31:39,240 - #8 =
INFO  20:31:39,240 - #9 c
INFO  20:31:39,240 - #6 ;
INFO  20:31:39,240 - #9 b
INFO  20:31:39,240 - #8 =
INFO  20:31:39,240 - #11 true
INFO  20:31:39,240 - #6 ;
INFO  20:31:39,240 - #9 c
INFO  20:31:39,240 - #22 ++
INFO  20:31:39,240 - #6 ;
INFO  20:31:39,240 - #9 x
INFO  20:31:39,240 - #20 [
INFO  20:31:39,240 - #10 0
INFO  20:31:39,240 - #21 ]
INFO  20:31:39,240 - #22 ++
INFO  20:31:39,240 - #6 ;
INFO  20:31:39,240 - #29 read
INFO  20:31:39,240 - #13 (
INFO  20:31:39,240 - #9 x
INFO  20:31:39,240 - #14 )
INFO  20:31:39,240 - #6 ;
INFO  20:31:39,240 - #30 print
INFO  20:31:39,240 - #13 (
INFO  20:31:39,240 - #9 x
INFO  20:31:39,240 - #7 ,
INFO  20:31:39,240 - #10 5
INFO  20:31:39,240 - #14 )
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #30 print
INFO  20:31:39,255 - #13 (
INFO  20:31:39,255 - #9 tmp
INFO  20:31:39,255 - #7 ,
INFO  20:31:39,255 - #10 7
INFO  20:31:39,255 - #14 )
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #9 c
INFO  20:31:39,255 - #8 =
INFO  20:31:39,255 - #9 x
INFO  20:31:39,255 - #20 [
INFO  20:31:39,255 - #10 0
INFO  20:31:39,255 - #21 ]
INFO  20:31:39,255 - #44 >=
INFO  20:31:39,255 - #9 x
INFO  20:31:39,255 - #20 [
INFO  20:31:39,255 - #10 1
INFO  20:31:39,255 - #21 ]
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #9 b
INFO  20:31:39,255 - #8 =
INFO  20:31:39,255 - #9 x
INFO  20:31:39,255 - #20 [
INFO  20:31:39,255 - #10 0
INFO  20:31:39,255 - #21 ]
INFO  20:31:39,255 - #45 <=
INFO  20:31:39,255 - #9 x
INFO  20:31:39,255 - #20 [
INFO  20:31:39,255 - #10 1
INFO  20:31:39,255 - #21 ]
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #9 b
INFO  20:31:39,255 - #8 =
INFO  20:31:39,255 - #9 x
INFO  20:31:39,255 - #43 <
INFO  20:31:39,255 - #9 y
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #9 b
INFO  20:31:39,255 - #8 =
INFO  20:31:39,255 - #9 x
INFO  20:31:39,255 - #41 !=
INFO  20:31:39,255 - #9 y
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #9 c
INFO  20:31:39,255 - #8 =
INFO  20:31:39,255 - #9 null
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #9 x
INFO  20:31:39,255 - #8 =
INFO  20:31:39,255 - #9 null
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #9 p
INFO  20:31:39,255 - #8 =
INFO  20:31:39,255 - #35 new
INFO  20:31:39,255 - #9 bool
INFO  20:31:39,255 - #20 [
INFO  20:31:39,255 - #10 5
INFO  20:31:39,255 - #21 ]
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #9 x
INFO  20:31:39,255 - #8 =
INFO  20:31:39,255 - #35 new
INFO  20:31:39,255 - #9 int
INFO  20:31:39,255 - #20 [
INFO  20:31:39,255 - #10 4
INFO  20:31:39,255 - #21 ]
INFO  20:31:39,255 - #6 ;
INFO  20:31:39,255 - #4 }
INFO  20:31:39,255 - #4 }
INFO  20:31:39,271 - Program(
  ProgramName(
   semanticErrors
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        YesDeclarationList(
          YesDeclarationList(
            YesDeclarationList(
              YesDeclarationList(
                YesDeclarationList(
                  YesDeclarationList(
                    YesDeclarationList(
                      YesDeclarationList(
                        NoDeclarationList(
                        ) [NoDeclarationList]
                        ConstantDeclaration(
                          ConstDeclNoError(
                            Type(
                             int
                            ) [Type]
                            SingleConstDeclList(
                              ConstDeclVariable(
                                ConstDeclName(
                                 constInt
                                ) [ConstDeclName]
                                ConstDeclValueInt(
                                 1
                                ) [ConstDeclValueInt]
                              ) [ConstDeclVariable]
                            ) [SingleConstDeclList]
                          ) [ConstDeclNoError]
                        ) [ConstantDeclaration]
                      ) [YesDeclarationList]
                      ConstantDeclaration(
                        ConstDeclNoError(
                          Type(
                           char
                          ) [Type]
                          SingleConstDeclList(
                            ConstDeclVariable(
                              ConstDeclName(
                               constChar
                              ) [ConstDeclName]
                              ConstDeclValueChar(
                               x
                              ) [ConstDeclValueChar]
                            ) [ConstDeclVariable]
                          ) [SingleConstDeclList]
                        ) [ConstDeclNoError]
                      ) [ConstantDeclaration]
                    ) [YesDeclarationList]
                    ConstantDeclaration(
                      ConstDeclNoError(
                        Type(
                         bool
                        ) [Type]
                        SingleConstDeclList(
                          ConstDeclVariable(
                            ConstDeclName(
                             constBool
                            ) [ConstDeclName]
                            ConstDeclValueBool(
                             true
                            ) [ConstDeclValueBool]
                          ) [ConstDeclVariable]
                        ) [SingleConstDeclList]
                      ) [ConstDeclNoError]
                    ) [ConstantDeclaration]
                  ) [YesDeclarationList]
                  ConstantDeclaration(
                    ConstDeclNoError(
                      Type(
                       int
                      ) [Type]
                      SingleConstDeclList(
                        ConstDeclVariable(
                          ConstDeclName(
                           constErrorInt
                          ) [ConstDeclName]
                          ConstDeclValueBool(
                           true
                          ) [ConstDeclValueBool]
                        ) [ConstDeclVariable]
                      ) [SingleConstDeclList]
                    ) [ConstDeclNoError]
                  ) [ConstantDeclaration]
                ) [YesDeclarationList]
                ConstantDeclaration(
                  ConstDeclNoError(
                    Type(
                     char
                    ) [Type]
                    SingleConstDeclList(
                      ConstDeclVariable(
                        ConstDeclName(
                         constErrorChar
                        ) [ConstDeclName]
                        ConstDeclValueInt(
                         5
                        ) [ConstDeclValueInt]
                      ) [ConstDeclVariable]
                    ) [SingleConstDeclList]
                  ) [ConstDeclNoError]
                ) [ConstantDeclaration]
              ) [YesDeclarationList]
              ConstantDeclaration(
                ConstDeclNoError(
                  Type(
                   bool
                  ) [Type]
                  SingleConstDeclList(
                    ConstDeclVariable(
                      ConstDeclName(
                       constErrorBool
                      ) [ConstDeclName]
                      ConstDeclValueChar(
                       h
                      ) [ConstDeclValueChar]
                    ) [ConstDeclVariable]
                  ) [SingleConstDeclList]
                ) [ConstDeclNoError]
              ) [ConstantDeclaration]
            ) [YesDeclarationList]
            ConstantDeclaration(
              ConstDeclNoError(
                Type(
                 int
                ) [Type]
                SingleConstDeclList(
                  ConstDeclVariable(
                    ConstDeclName(
                     constInt
                    ) [ConstDeclName]
                    ConstDeclValueInt(
                     3
                    ) [ConstDeclValueInt]
                  ) [ConstDeclVariable]
                ) [SingleConstDeclList]
              ) [ConstDeclNoError]
            ) [ConstantDeclaration]
          ) [YesDeclarationList]
          VariableDeclaration(
            VarDeclNoError(
              Type(
               int
              ) [Type]
              PluralVarDeclList(
                SingleVarDeclList(
                  DeclVariable(
                    VarDeclName(
                     x
                    ) [VarDeclName]
                    YesVarDeclArrayOption(
                    ) [YesVarDeclArrayOption]
                  ) [DeclVariable]
                ) [SingleVarDeclList]
                DeclVariable(
                  VarDeclName(
                   y
                  ) [VarDeclName]
                  YesVarDeclArrayOption(
                  ) [YesVarDeclArrayOption]
                ) [DeclVariable]
              ) [PluralVarDeclList]
            ) [VarDeclNoError]
          ) [VariableDeclaration]
        ) [YesDeclarationList]
        VariableDeclaration(
          VarDeclNoError(
            Type(
             bool
            ) [Type]
            SingleVarDeclList(
              DeclVariable(
                VarDeclName(
                 b
                ) [VarDeclName]
                NoVarDeclArrayOption(
                ) [NoVarDeclArrayOption]
              ) [DeclVariable]
            ) [SingleVarDeclList]
          ) [VarDeclNoError]
        ) [VariableDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           char
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               c
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         string
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             s
            ) [VarDeclName]
            NoVarDeclArrayOption(
            ) [NoVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      YesMethodVariables(
        NoMethodVariables(
        ) [NoMethodVariables]
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               tmp
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [YesMethodVariables]
      YesMethodBody(
        YesMethodBody(
          YesMethodBody(
            YesMethodBody(
              YesMethodBody(
                YesMethodBody(
                  YesMethodBody(
                    YesMethodBody(
                      YesMethodBody(
                        YesMethodBody(
                          YesMethodBody(
                            YesMethodBody(
                              YesMethodBody(
                                YesMethodBody(
                                  YesMethodBody(
                                    NoMethodBody(
                                    ) [NoMethodBody]
                                    DesignatorStatementDecl(
                                      DesignatorStatement(
                                        Designator(
                                          DesignatorName(
                                           b
                                          ) [DesignatorName]
                                          NoOptionalDesignator(
                                          ) [NoOptionalDesignator]
                                        ) [Designator]
                                        PossibleErrorAssignOpDesignatorAddition(
                                          AssignOpExprDesignatorAdditionNoError(
                                            Assignop(
                                            ) [Assignop]
                                            NoTernaryExpr(
                                              SingleCondFact(
                                                TermFiniteExpr(
                                                  FactorTerm(
                                                    DesignatorFactor(
                                                      Designator(
                                                        DesignatorName(
                                                         c
                                                        ) [DesignatorName]
                                                        NoOptionalDesignator(
                                                        ) [NoOptionalDesignator]
                                                      ) [Designator]
                                                    ) [DesignatorFactor]
                                                  ) [FactorTerm]
                                                  NoOptionalTermList(
                                                  ) [NoOptionalTermList]
                                                ) [TermFiniteExpr]
                                              ) [SingleCondFact]
                                            ) [NoTernaryExpr]
                                          ) [AssignOpExprDesignatorAdditionNoError]
                                        ) [PossibleErrorAssignOpDesignatorAddition]
                                      ) [DesignatorStatement]
                                    ) [DesignatorStatementDecl]
                                  ) [YesMethodBody]
                                  DesignatorStatementDecl(
                                    DesignatorStatement(
                                      Designator(
                                        DesignatorName(
                                         b
                                        ) [DesignatorName]
                                        NoOptionalDesignator(
                                        ) [NoOptionalDesignator]
                                      ) [Designator]
                                      PossibleErrorAssignOpDesignatorAddition(
                                        AssignOpExprDesignatorAdditionNoError(
                                          Assignop(
                                          ) [Assignop]
                                          NoTernaryExpr(
                                            SingleCondFact(
                                              TermFiniteExpr(
                                                FactorTerm(
                                                  BoolFactor(
                                                   true
                                                  ) [BoolFactor]
                                                ) [FactorTerm]
                                                NoOptionalTermList(
                                                ) [NoOptionalTermList]
                                              ) [TermFiniteExpr]
                                            ) [SingleCondFact]
                                          ) [NoTernaryExpr]
                                        ) [AssignOpExprDesignatorAdditionNoError]
                                      ) [PossibleErrorAssignOpDesignatorAddition]
                                    ) [DesignatorStatement]
                                  ) [DesignatorStatementDecl]
                                ) [YesMethodBody]
                                DesignatorStatementDecl(
                                  DesignatorStatement(
                                    Designator(
                                      DesignatorName(
                                       c
                                      ) [DesignatorName]
                                      NoOptionalDesignator(
                                      ) [NoOptionalDesignator]
                                    ) [Designator]
                                    IncrementDesignatorAddition(
                                    ) [IncrementDesignatorAddition]
                                  ) [DesignatorStatement]
                                ) [DesignatorStatementDecl]
                              ) [YesMethodBody]
                              DesignatorStatementDecl(
                                DesignatorStatement(
                                  Designator(
                                    DesignatorName(
                                     x
                                    ) [DesignatorName]
                                    YesOptionalDesignator(
                                      NoTernaryExpr(
                                        SingleCondFact(
                                          TermFiniteExpr(
                                            FactorTerm(
                                              IntFactor(
                                               0
                                              ) [IntFactor]
                                            ) [FactorTerm]
                                            NoOptionalTermList(
                                            ) [NoOptionalTermList]
                                          ) [TermFiniteExpr]
                                        ) [SingleCondFact]
                                      ) [NoTernaryExpr]
                                    ) [YesOptionalDesignator]
                                  ) [Designator]
                                  IncrementDesignatorAddition(
                                  ) [IncrementDesignatorAddition]
                                ) [DesignatorStatement]
                              ) [DesignatorStatementDecl]
                            ) [YesMethodBody]
                            ReadStatementDecl(
                              ReadStatement(
                                Designator(
                                  DesignatorName(
                                   x
                                  ) [DesignatorName]
                                  NoOptionalDesignator(
                                  ) [NoOptionalDesignator]
                                ) [Designator]
                              ) [ReadStatement]
                            ) [ReadStatementDecl]
                          ) [YesMethodBody]
                          PrintStatementDecl(
                            PrintStatement(
                              NoTernaryExpr(
                                SingleCondFact(
                                  TermFiniteExpr(
                                    FactorTerm(
                                      DesignatorFactor(
                                        Designator(
                                          DesignatorName(
                                           x
                                          ) [DesignatorName]
                                          NoOptionalDesignator(
                                          ) [NoOptionalDesignator]
                                        ) [Designator]
                                      ) [DesignatorFactor]
                                    ) [FactorTerm]
                                    NoOptionalTermList(
                                    ) [NoOptionalTermList]
                                  ) [TermFiniteExpr]
                                ) [SingleCondFact]
                              ) [NoTernaryExpr]
                              OptionalYesPrintNumber(
                                PrintInt(
                                 5
                                ) [PrintInt]
                              ) [OptionalYesPrintNumber]
                            ) [PrintStatement]
                          ) [PrintStatementDecl]
                        ) [YesMethodBody]
                        PrintStatementDecl(
                          PrintStatement(
                            NoTernaryExpr(
                              SingleCondFact(
                                TermFiniteExpr(
                                  FactorTerm(
                                    DesignatorFactor(
                                      Designator(
                                        DesignatorName(
                                         tmp
                                        ) [DesignatorName]
                                        NoOptionalDesignator(
                                        ) [NoOptionalDesignator]
                                      ) [Designator]
                                    ) [DesignatorFactor]
                                  ) [FactorTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [TermFiniteExpr]
                              ) [SingleCondFact]
                            ) [NoTernaryExpr]
                            OptionalYesPrintNumber(
                              PrintInt(
                               7
                              ) [PrintInt]
                            ) [OptionalYesPrintNumber]
                          ) [PrintStatement]
                        ) [PrintStatementDecl]
                      ) [YesMethodBody]
                      DesignatorStatementDecl(
                        DesignatorStatement(
                          Designator(
                            DesignatorName(
                             c
                            ) [DesignatorName]
                            NoOptionalDesignator(
                            ) [NoOptionalDesignator]
                          ) [Designator]
                          PossibleErrorAssignOpDesignatorAddition(
                            AssignOpExprDesignatorAdditionNoError(
                              Assignop(
                              ) [Assignop]
                              NoTernaryExpr(
                                PluralCondFact(
                                  TermFiniteExpr(
                                    FactorTerm(
                                      DesignatorFactor(
                                        Designator(
                                          DesignatorName(
                                           x
                                          ) [DesignatorName]
                                          YesOptionalDesignator(
                                            NoTernaryExpr(
                                              SingleCondFact(
                                                TermFiniteExpr(
                                                  FactorTerm(
                                                    IntFactor(
                                                     0
                                                    ) [IntFactor]
                                                  ) [FactorTerm]
                                                  NoOptionalTermList(
                                                  ) [NoOptionalTermList]
                                                ) [TermFiniteExpr]
                                              ) [SingleCondFact]
                                            ) [NoTernaryExpr]
                                          ) [YesOptionalDesignator]
                                        ) [Designator]
                                      ) [DesignatorFactor]
                                    ) [FactorTerm]
                                    NoOptionalTermList(
                                    ) [NoOptionalTermList]
                                  ) [TermFiniteExpr]
                                  RelopGreaterOrEqual(
                                  ) [RelopGreaterOrEqual]
                                  TermFiniteExpr(
                                    FactorTerm(
                                      DesignatorFactor(
                                        Designator(
                                          DesignatorName(
                                           x
                                          ) [DesignatorName]
                                          YesOptionalDesignator(
                                            NoTernaryExpr(
                                              SingleCondFact(
                                                TermFiniteExpr(
                                                  FactorTerm(
                                                    IntFactor(
                                                     1
                                                    ) [IntFactor]
                                                  ) [FactorTerm]
                                                  NoOptionalTermList(
                                                  ) [NoOptionalTermList]
                                                ) [TermFiniteExpr]
                                              ) [SingleCondFact]
                                            ) [NoTernaryExpr]
                                          ) [YesOptionalDesignator]
                                        ) [Designator]
                                      ) [DesignatorFactor]
                                    ) [FactorTerm]
                                    NoOptionalTermList(
                                    ) [NoOptionalTermList]
                                  ) [TermFiniteExpr]
                                ) [PluralCondFact]
                              ) [NoTernaryExpr]
                            ) [AssignOpExprDesignatorAdditionNoError]
                          ) [PossibleErrorAssignOpDesignatorAddition]
                        ) [DesignatorStatement]
                      ) [DesignatorStatementDecl]
                    ) [YesMethodBody]
                    DesignatorStatementDecl(
                      DesignatorStatement(
                        Designator(
                          DesignatorName(
                           b
                          ) [DesignatorName]
                          NoOptionalDesignator(
                          ) [NoOptionalDesignator]
                        ) [Designator]
                        PossibleErrorAssignOpDesignatorAddition(
                          AssignOpExprDesignatorAdditionNoError(
                            Assignop(
                            ) [Assignop]
                            NoTernaryExpr(
                              PluralCondFact(
                                TermFiniteExpr(
                                  FactorTerm(
                                    DesignatorFactor(
                                      Designator(
                                        DesignatorName(
                                         x
                                        ) [DesignatorName]
                                        YesOptionalDesignator(
                                          NoTernaryExpr(
                                            SingleCondFact(
                                              TermFiniteExpr(
                                                FactorTerm(
                                                  IntFactor(
                                                   0
                                                  ) [IntFactor]
                                                ) [FactorTerm]
                                                NoOptionalTermList(
                                                ) [NoOptionalTermList]
                                              ) [TermFiniteExpr]
                                            ) [SingleCondFact]
                                          ) [NoTernaryExpr]
                                        ) [YesOptionalDesignator]
                                      ) [Designator]
                                    ) [DesignatorFactor]
                                  ) [FactorTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [TermFiniteExpr]
                                RelopLessOrEqual(
                                ) [RelopLessOrEqual]
                                TermFiniteExpr(
                                  FactorTerm(
                                    DesignatorFactor(
                                      Designator(
                                        DesignatorName(
                                         x
                                        ) [DesignatorName]
                                        YesOptionalDesignator(
                                          NoTernaryExpr(
                                            SingleCondFact(
                                              TermFiniteExpr(
                                                FactorTerm(
                                                  IntFactor(
                                                   1
                                                  ) [IntFactor]
                                                ) [FactorTerm]
                                                NoOptionalTermList(
                                                ) [NoOptionalTermList]
                                              ) [TermFiniteExpr]
                                            ) [SingleCondFact]
                                          ) [NoTernaryExpr]
                                        ) [YesOptionalDesignator]
                                      ) [Designator]
                                    ) [DesignatorFactor]
                                  ) [FactorTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [TermFiniteExpr]
                              ) [PluralCondFact]
                            ) [NoTernaryExpr]
                          ) [AssignOpExprDesignatorAdditionNoError]
                        ) [PossibleErrorAssignOpDesignatorAddition]
                      ) [DesignatorStatement]
                    ) [DesignatorStatementDecl]
                  ) [YesMethodBody]
                  DesignatorStatementDecl(
                    DesignatorStatement(
                      Designator(
                        DesignatorName(
                         b
                        ) [DesignatorName]
                        NoOptionalDesignator(
                        ) [NoOptionalDesignator]
                      ) [Designator]
                      PossibleErrorAssignOpDesignatorAddition(
                        AssignOpExprDesignatorAdditionNoError(
                          Assignop(
                          ) [Assignop]
                          NoTernaryExpr(
                            PluralCondFact(
                              TermFiniteExpr(
                                FactorTerm(
                                  DesignatorFactor(
                                    Designator(
                                      DesignatorName(
                                       x
                                      ) [DesignatorName]
                                      NoOptionalDesignator(
                                      ) [NoOptionalDesignator]
                                    ) [Designator]
                                  ) [DesignatorFactor]
                                ) [FactorTerm]
                                NoOptionalTermList(
                                ) [NoOptionalTermList]
                              ) [TermFiniteExpr]
                              RelopLess(
                              ) [RelopLess]
                              TermFiniteExpr(
                                FactorTerm(
                                  DesignatorFactor(
                                    Designator(
                                      DesignatorName(
                                       y
                                      ) [DesignatorName]
                                      NoOptionalDesignator(
                                      ) [NoOptionalDesignator]
                                    ) [Designator]
                                  ) [DesignatorFactor]
                                ) [FactorTerm]
                                NoOptionalTermList(
                                ) [NoOptionalTermList]
                              ) [TermFiniteExpr]
                            ) [PluralCondFact]
                          ) [NoTernaryExpr]
                        ) [AssignOpExprDesignatorAdditionNoError]
                      ) [PossibleErrorAssignOpDesignatorAddition]
                    ) [DesignatorStatement]
                  ) [DesignatorStatementDecl]
                ) [YesMethodBody]
                DesignatorStatementDecl(
                  DesignatorStatement(
                    Designator(
                      DesignatorName(
                       b
                      ) [DesignatorName]
                      NoOptionalDesignator(
                      ) [NoOptionalDesignator]
                    ) [Designator]
                    PossibleErrorAssignOpDesignatorAddition(
                      AssignOpExprDesignatorAdditionNoError(
                        Assignop(
                        ) [Assignop]
                        NoTernaryExpr(
                          PluralCondFact(
                            TermFiniteExpr(
                              FactorTerm(
                                DesignatorFactor(
                                  Designator(
                                    DesignatorName(
                                     x
                                    ) [DesignatorName]
                                    NoOptionalDesignator(
                                    ) [NoOptionalDesignator]
                                  ) [Designator]
                                ) [DesignatorFactor]
                              ) [FactorTerm]
                              NoOptionalTermList(
                              ) [NoOptionalTermList]
                            ) [TermFiniteExpr]
                            RelopNotEqual(
                            ) [RelopNotEqual]
                            TermFiniteExpr(
                              FactorTerm(
                                DesignatorFactor(
                                  Designator(
                                    DesignatorName(
                                     y
                                    ) [DesignatorName]
                                    NoOptionalDesignator(
                                    ) [NoOptionalDesignator]
                                  ) [Designator]
                                ) [DesignatorFactor]
                              ) [FactorTerm]
                              NoOptionalTermList(
                              ) [NoOptionalTermList]
                            ) [TermFiniteExpr]
                          ) [PluralCondFact]
                        ) [NoTernaryExpr]
                      ) [AssignOpExprDesignatorAdditionNoError]
                    ) [PossibleErrorAssignOpDesignatorAddition]
                  ) [DesignatorStatement]
                ) [DesignatorStatementDecl]
              ) [YesMethodBody]
              DesignatorStatementDecl(
                DesignatorStatement(
                  Designator(
                    DesignatorName(
                     c
                    ) [DesignatorName]
                    NoOptionalDesignator(
                    ) [NoOptionalDesignator]
                  ) [Designator]
                  PossibleErrorAssignOpDesignatorAddition(
                    AssignOpExprDesignatorAdditionNoError(
                      Assignop(
                      ) [Assignop]
                      NoTernaryExpr(
                        SingleCondFact(
                          TermFiniteExpr(
                            FactorTerm(
                              DesignatorFactor(
                                Designator(
                                  DesignatorName(
                                   null
                                  ) [DesignatorName]
                                  NoOptionalDesignator(
                                  ) [NoOptionalDesignator]
                                ) [Designator]
                              ) [DesignatorFactor]
                            ) [FactorTerm]
                            NoOptionalTermList(
                            ) [NoOptionalTermList]
                          ) [TermFiniteExpr]
                        ) [SingleCondFact]
                      ) [NoTernaryExpr]
                    ) [AssignOpExprDesignatorAdditionNoError]
                  ) [PossibleErrorAssignOpDesignatorAddition]
                ) [DesignatorStatement]
              ) [DesignatorStatementDecl]
            ) [YesMethodBody]
            DesignatorStatementDecl(
              DesignatorStatement(
                Designator(
                  DesignatorName(
                   x
                  ) [DesignatorName]
                  NoOptionalDesignator(
                  ) [NoOptionalDesignator]
                ) [Designator]
                PossibleErrorAssignOpDesignatorAddition(
                  AssignOpExprDesignatorAdditionNoError(
                    Assignop(
                    ) [Assignop]
                    NoTernaryExpr(
                      SingleCondFact(
                        TermFiniteExpr(
                          FactorTerm(
                            DesignatorFactor(
                              Designator(
                                DesignatorName(
                                 null
                                ) [DesignatorName]
                                NoOptionalDesignator(
                                ) [NoOptionalDesignator]
                              ) [Designator]
                            ) [DesignatorFactor]
                          ) [FactorTerm]
                          NoOptionalTermList(
                          ) [NoOptionalTermList]
                        ) [TermFiniteExpr]
                      ) [SingleCondFact]
                    ) [NoTernaryExpr]
                  ) [AssignOpExprDesignatorAdditionNoError]
                ) [PossibleErrorAssignOpDesignatorAddition]
              ) [DesignatorStatement]
            ) [DesignatorStatementDecl]
          ) [YesMethodBody]
          DesignatorStatementDecl(
            DesignatorStatement(
              Designator(
                DesignatorName(
                 p
                ) [DesignatorName]
                NoOptionalDesignator(
                ) [NoOptionalDesignator]
              ) [Designator]
              PossibleErrorAssignOpDesignatorAddition(
                AssignOpExprDesignatorAdditionNoError(
                  Assignop(
                  ) [Assignop]
                  NoTernaryExpr(
                    SingleCondFact(
                      TermFiniteExpr(
                        FactorTerm(
                          NewArrayFactor(
                            Type(
                             bool
                            ) [Type]
                            NoTernaryExpr(
                              SingleCondFact(
                                TermFiniteExpr(
                                  FactorTerm(
                                    IntFactor(
                                     5
                                    ) [IntFactor]
                                  ) [FactorTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [TermFiniteExpr]
                              ) [SingleCondFact]
                            ) [NoTernaryExpr]
                          ) [NewArrayFactor]
                        ) [FactorTerm]
                        NoOptionalTermList(
                        ) [NoOptionalTermList]
                      ) [TermFiniteExpr]
                    ) [SingleCondFact]
                  ) [NoTernaryExpr]
                ) [AssignOpExprDesignatorAdditionNoError]
              ) [PossibleErrorAssignOpDesignatorAddition]
            ) [DesignatorStatement]
          ) [DesignatorStatementDecl]
        ) [YesMethodBody]
        DesignatorStatementDecl(
          DesignatorStatement(
            Designator(
              DesignatorName(
               x
              ) [DesignatorName]
              NoOptionalDesignator(
              ) [NoOptionalDesignator]
            ) [Designator]
            PossibleErrorAssignOpDesignatorAddition(
              AssignOpExprDesignatorAdditionNoError(
                Assignop(
                ) [Assignop]
                NoTernaryExpr(
                  SingleCondFact(
                    TermFiniteExpr(
                      FactorTerm(
                        NewArrayFactor(
                          Type(
                           int
                          ) [Type]
                          NoTernaryExpr(
                            SingleCondFact(
                              TermFiniteExpr(
                                FactorTerm(
                                  IntFactor(
                                   4
                                  ) [IntFactor]
                                ) [FactorTerm]
                                NoOptionalTermList(
                                ) [NoOptionalTermList]
                              ) [TermFiniteExpr]
                            ) [SingleCondFact]
                          ) [NoTernaryExpr]
                        ) [NewArrayFactor]
                      ) [FactorTerm]
                      NoOptionalTermList(
                      ) [NoOptionalTermList]
                    ) [TermFiniteExpr]
                  ) [SingleCondFact]
                ) [NoTernaryExpr]
              ) [AssignOpExprDesignatorAdditionNoError]
            ) [PossibleErrorAssignOpDesignatorAddition]
          ) [DesignatorStatement]
        ) [DesignatorStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  20:31:39,271 - ===================================
INFO  20:31:39,271 - Const variable constInt declared on line 3
INFO  20:31:39,271 - Const variable constChar declared on line 4
INFO  20:31:39,271 - Const variable constBool declared on line 5
ERROR 20:31:39,271 - Semantic Error: Const variable constErrorInt is not compatible with assigning value on line 7
ERROR 20:31:39,271 - Semantic Error: Const variable constErrorChar is not compatible with assigning value on line 8
ERROR 20:31:39,271 - Semantic Error: Const variable constErrorBool is not compatible with assigning value on line 9
ERROR 20:31:39,271 - Semantic Error: Const variable constInt has already been declared on line 11
INFO  20:31:39,271 - Global array x declared on line 13
INFO  20:31:39,271 - Global array y declared on line 13
INFO  20:31:39,271 - Global variable b declared on line 14
INFO  20:31:39,271 - Global variable c declared on line 15
ERROR 20:31:39,271 - Type string not found in Symbol Table on line 17
INFO  20:31:39,271 - Global variable s declared on line 17
INFO  20:31:39,271 - Method main declared on line 20
INFO  20:31:39,271 - Local variable tmp declared on line 20
INFO  20:31:39,271 - Variable b used on line 22
INFO  20:31:39,271 - Variable c used on line 22
ERROR 20:31:39,271 - Semantic Error: Incompatible types where Expr is assigned to Designator on line 22
INFO  20:31:39,287 - Variable b used on line 23
INFO  20:31:39,287 - Variable c used on line 25
ERROR 20:31:39,287 - Semantic Error: post-increment and post-decrement operators can only be used with int types on line 25
INFO  20:31:39,287 - Element of array x used on line 26
INFO  20:31:39,287 - Array x used on line 28
ERROR 20:31:39,287 - Semantic Error: Operand of read method on line 28 must be of int, bool or char type
INFO  20:31:39,287 - Array x used on line 29
ERROR 20:31:39,287 - Semantic Error: Operand of print method on line 29 must be of int, bool or char type
INFO  20:31:39,287 - Variable tmp used on line 30
INFO  20:31:39,287 - Variable c used on line 32
INFO  20:31:39,287 - Element of array x used on line 32
INFO  20:31:39,287 - Element of array x used on line 32
ERROR 20:31:39,287 - Semantic Error: Incompatible types where Expr is assigned to Designator on line 32
INFO  20:31:39,287 - Variable b used on line 33
INFO  20:31:39,287 - Element of array x used on line 33
INFO  20:31:39,287 - Element of array x used on line 33
INFO  20:31:39,287 - Variable b used on line 35
INFO  20:31:39,287 - Array x used on line 35
INFO  20:31:39,287 - Array y used on line 35
ERROR 20:31:39,287 - Semantic Error: CondFact operands of array type on line 35 can only be compared for equality or non-equality
ERROR 20:31:39,287 - Semantic Error: Incompatible types where Expr is assigned to Designator on line 35
INFO  20:31:39,287 - Variable b used on line 36
INFO  20:31:39,287 - Array x used on line 36
INFO  20:31:39,287 - Array y used on line 36
INFO  20:31:39,287 - Variable c used on line 38
INFO  20:31:39,287 - Variable null used on line 38
ERROR 20:31:39,287 - Semantic Error: Incompatible types where Expr is assigned to Designator on line 38
INFO  20:31:39,287 - Array x used on line 39
INFO  20:31:39,287 - Variable null used on line 39
ERROR 20:31:39,287 - Semantic Error: Variable p used on line 41 has not been declared
ERROR 20:31:39,287 - Semantic Error: Incompatible types where Expr is assigned to Designator on line 41
INFO  20:31:39,287 - Array x used on line 42
ERROR 20:31:39,287 - Parsing finished UNSUCCESSFULLY!
