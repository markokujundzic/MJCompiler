INFO  10:49:53,744 - ====================LEXICAL ANALYSIS========================
INFO  10:49:53,822 - #2 program
INFO  10:49:53,822 - #9 test301
INFO  10:49:53,822 - #5 const
INFO  10:49:53,822 - #9 int
INFO  10:49:53,822 - #9 nula
INFO  10:49:53,837 - #8 =
INFO  10:49:53,837 - #10 0
INFO  10:49:53,837 - #6 ;
INFO  10:49:53,837 - #5 const
INFO  10:49:53,837 - #9 int
INFO  10:49:53,837 - #9 jedan
INFO  10:49:53,837 - #8 =
INFO  10:49:53,837 - #10 1
INFO  10:49:53,837 - #6 ;
INFO  10:49:53,837 - #5 const
INFO  10:49:53,837 - #9 int
INFO  10:49:53,837 - #9 pet
INFO  10:49:53,837 - #8 =
INFO  10:49:53,837 - #10 5
INFO  10:49:53,837 - #6 ;
INFO  10:49:53,837 - #9 int
INFO  10:49:53,837 - #9 niz
INFO  10:49:53,837 - #20 [
INFO  10:49:53,837 - #21 ]
INFO  10:49:53,837 - #6 ;
INFO  10:49:53,837 - #9 char
INFO  10:49:53,837 - #9 nizch
INFO  10:49:53,837 - #20 [
INFO  10:49:53,837 - #21 ]
INFO  10:49:53,837 - #6 ;
INFO  10:49:53,837 - #3 {
INFO  10:49:53,837 - #15 void
INFO  10:49:53,837 - #9 main
INFO  10:49:53,837 - #13 (
INFO  10:49:53,853 - #14 )
INFO  10:49:53,853 - #9 int
INFO  10:49:53,853 - #9 bodovi
INFO  10:49:53,853 - #6 ;
INFO  10:49:53,853 - #9 bool
INFO  10:49:53,853 - #9 bt
INFO  10:49:53,853 - #6 ;
INFO  10:49:53,853 - #9 char
INFO  10:49:53,853 - #9 c
INFO  10:49:53,853 - #6 ;
INFO  10:49:53,853 - #3 {
INFO  10:49:53,853 - #9 c
INFO  10:49:53,853 - #8 =
INFO  10:49:53,853 - #34 -
INFO  10:49:53,853 - #12 a
INFO  10:49:53,853 - #6 ;
INFO  10:49:53,853 - #9 bodovi
INFO  10:49:53,853 - #8 =
INFO  10:49:53,853 - #10 1
INFO  10:49:53,853 - #6 ;
INFO  10:49:53,853 - #9 bodovi
INFO  10:49:53,853 - #22 ++
INFO  10:49:53,853 - #6 ;
INFO  10:49:53,869 - #30 print
INFO  10:49:53,869 - #13 (
INFO  10:49:53,869 - #9 bodovi
INFO  10:49:53,869 - #14 )
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #9 niz
INFO  10:49:53,869 - #8 =
INFO  10:49:53,869 - #35 new
INFO  10:49:53,869 - #9 int
INFO  10:49:53,869 - #20 [
INFO  10:49:53,869 - #9 pet
INFO  10:49:53,869 - #21 ]
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #9 niz
INFO  10:49:53,869 - #20 [
INFO  10:49:53,869 - #10 0
INFO  10:49:53,869 - #21 ]
INFO  10:49:53,869 - #22 ++
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #9 niz
INFO  10:49:53,869 - #20 [
INFO  10:49:53,869 - #10 0
INFO  10:49:53,869 - #21 ]
INFO  10:49:53,869 - #22 ++
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #30 print
INFO  10:49:53,869 - #13 (
INFO  10:49:53,869 - #9 niz
INFO  10:49:53,869 - #20 [
INFO  10:49:53,869 - #10 0
INFO  10:49:53,869 - #21 ]
INFO  10:49:53,869 - #14 )
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #9 niz
INFO  10:49:53,869 - #20 [
INFO  10:49:53,869 - #10 1
INFO  10:49:53,869 - #21 ]
INFO  10:49:53,869 - #23 --
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #30 print
INFO  10:49:53,869 - #13 (
INFO  10:49:53,869 - #9 niz
INFO  10:49:53,869 - #20 [
INFO  10:49:53,869 - #10 1
INFO  10:49:53,869 - #21 ]
INFO  10:49:53,869 - #14 )
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #9 bodovi
INFO  10:49:53,869 - #23 --
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #30 print
INFO  10:49:53,869 - #13 (
INFO  10:49:53,869 - #9 bodovi
INFO  10:49:53,869 - #14 )
INFO  10:49:53,869 - #6 ;
INFO  10:49:53,869 - #4 }
INFO  10:49:53,869 - #4 }
INFO  10:49:53,869 - =======================SYNTAX TREE===========================
INFO  10:49:53,884 - Program(
  ProgramName(
   test301
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        YesDeclarationList(
          YesDeclarationList(
            NoDeclarationList(
            ) [NoDeclarationList]
            ConstantDeclaration(
              ConstDeclNoError(
                Type(
                 int
                ) [Type]
                SingleConstDeclList(
                  ConstDeclVariable(
                    ConstDeclName(
                     nula
                    ) [ConstDeclName]
                    ConstDeclValueInt(
                     0
                    ) [ConstDeclValueInt]
                  ) [ConstDeclVariable]
                ) [SingleConstDeclList]
              ) [ConstDeclNoError]
            ) [ConstantDeclaration]
          ) [YesDeclarationList]
          ConstantDeclaration(
            ConstDeclNoError(
              Type(
               int
              ) [Type]
              SingleConstDeclList(
                ConstDeclVariable(
                  ConstDeclName(
                   jedan
                  ) [ConstDeclName]
                  ConstDeclValueInt(
                   1
                  ) [ConstDeclValueInt]
                ) [ConstDeclVariable]
              ) [SingleConstDeclList]
            ) [ConstDeclNoError]
          ) [ConstantDeclaration]
        ) [YesDeclarationList]
        ConstantDeclaration(
          ConstDeclNoError(
            Type(
             int
            ) [Type]
            SingleConstDeclList(
              ConstDeclVariable(
                ConstDeclName(
                 pet
                ) [ConstDeclName]
                ConstDeclValueInt(
                 5
                ) [ConstDeclValueInt]
              ) [ConstDeclVariable]
            ) [SingleConstDeclList]
          ) [ConstDeclNoError]
        ) [ConstantDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               niz
              ) [VarDeclName]
              YesVarDeclArrayOption(
              ) [YesVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         char
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             nizch
            ) [VarDeclName]
            YesVarDeclArrayOption(
            ) [YesVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      YesMethodVariables(
        YesMethodVariables(
          YesMethodVariables(
            NoMethodVariables(
            ) [NoMethodVariables]
            VarDeclNoError(
              Type(
               int
              ) [Type]
              SingleVarDeclList(
                DeclVariable(
                  VarDeclName(
                   bodovi
                  ) [VarDeclName]
                  NoVarDeclArrayOption(
                  ) [NoVarDeclArrayOption]
                ) [DeclVariable]
              ) [SingleVarDeclList]
            ) [VarDeclNoError]
          ) [YesMethodVariables]
          VarDeclNoError(
            Type(
             bool
            ) [Type]
            SingleVarDeclList(
              DeclVariable(
                VarDeclName(
                 bt
                ) [VarDeclName]
                NoVarDeclArrayOption(
                ) [NoVarDeclArrayOption]
              ) [DeclVariable]
            ) [SingleVarDeclList]
          ) [VarDeclNoError]
        ) [YesMethodVariables]
        VarDeclNoError(
          Type(
           char
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               c
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [YesMethodVariables]
      YesMethodBody(
        YesMethodBody(
          YesMethodBody(
            YesMethodBody(
              YesMethodBody(
                YesMethodBody(
                  YesMethodBody(
                    YesMethodBody(
                      YesMethodBody(
                        YesMethodBody(
                          YesMethodBody(
                            YesMethodBody(
                              NoMethodBody(
                              ) [NoMethodBody]
                              DesignatorStatementDecl(
                                DesignatorStatement(
                                  Designator(
                                    DesignatorName(
                                     c
                                    ) [DesignatorName]
                                    NoOptionalDesignator(
                                    ) [NoOptionalDesignator]
                                  ) [Designator]
                                  PossibleErrorAssignOpDesignatorAddition(
                                    AssignOpExprDesignatorAdditionNoError(
                                      Assignop(
                                      ) [Assignop]
                                      NoTernaryExpr(
                                        SingleCondFact(
                                          MinusTermFiniteExpr(
                                            FiniteTerm(
                                              FactorTerm(
                                                CharFactor(
                                                 a
                                                ) [CharFactor]
                                              ) [FactorTerm]
                                            ) [FiniteTerm]
                                            NoOptionalTermList(
                                            ) [NoOptionalTermList]
                                          ) [MinusTermFiniteExpr]
                                        ) [SingleCondFact]
                                      ) [NoTernaryExpr]
                                    ) [AssignOpExprDesignatorAdditionNoError]
                                  ) [PossibleErrorAssignOpDesignatorAddition]
                                ) [DesignatorStatement]
                              ) [DesignatorStatementDecl]
                            ) [YesMethodBody]
                            DesignatorStatementDecl(
                              DesignatorStatement(
                                Designator(
                                  DesignatorName(
                                   bodovi
                                  ) [DesignatorName]
                                  NoOptionalDesignator(
                                  ) [NoOptionalDesignator]
                                ) [Designator]
                                PossibleErrorAssignOpDesignatorAddition(
                                  AssignOpExprDesignatorAdditionNoError(
                                    Assignop(
                                    ) [Assignop]
                                    NoTernaryExpr(
                                      SingleCondFact(
                                        TermFiniteExpr(
                                          FiniteTerm(
                                            FactorTerm(
                                              IntFactor(
                                               1
                                              ) [IntFactor]
                                            ) [FactorTerm]
                                          ) [FiniteTerm]
                                          NoOptionalTermList(
                                          ) [NoOptionalTermList]
                                        ) [TermFiniteExpr]
                                      ) [SingleCondFact]
                                    ) [NoTernaryExpr]
                                  ) [AssignOpExprDesignatorAdditionNoError]
                                ) [PossibleErrorAssignOpDesignatorAddition]
                              ) [DesignatorStatement]
                            ) [DesignatorStatementDecl]
                          ) [YesMethodBody]
                          DesignatorStatementDecl(
                            DesignatorStatement(
                              Designator(
                                DesignatorName(
                                 bodovi
                                ) [DesignatorName]
                                NoOptionalDesignator(
                                ) [NoOptionalDesignator]
                              ) [Designator]
                              IncrementDesignatorAddition(
                              ) [IncrementDesignatorAddition]
                            ) [DesignatorStatement]
                          ) [DesignatorStatementDecl]
                        ) [YesMethodBody]
                        PrintStatementDecl(
                          PrintStatement(
                            NoTernaryExpr(
                              SingleCondFact(
                                TermFiniteExpr(
                                  FiniteTerm(
                                    FactorTerm(
                                      DesignatorFactor(
                                        Designator(
                                          DesignatorName(
                                           bodovi
                                          ) [DesignatorName]
                                          NoOptionalDesignator(
                                          ) [NoOptionalDesignator]
                                        ) [Designator]
                                      ) [DesignatorFactor]
                                    ) [FactorTerm]
                                  ) [FiniteTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [TermFiniteExpr]
                              ) [SingleCondFact]
                            ) [NoTernaryExpr]
                            OptionalNoPrintNumber(
                            ) [OptionalNoPrintNumber]
                          ) [PrintStatement]
                        ) [PrintStatementDecl]
                      ) [YesMethodBody]
                      DesignatorStatementDecl(
                        DesignatorStatement(
                          Designator(
                            DesignatorName(
                             niz
                            ) [DesignatorName]
                            NoOptionalDesignator(
                            ) [NoOptionalDesignator]
                          ) [Designator]
                          PossibleErrorAssignOpDesignatorAddition(
                            AssignOpExprDesignatorAdditionNoError(
                              Assignop(
                              ) [Assignop]
                              NoTernaryExpr(
                                SingleCondFact(
                                  TermFiniteExpr(
                                    FiniteTerm(
                                      FactorTerm(
                                        NewArrayFactor(
                                          Type(
                                           int
                                          ) [Type]
                                          NoTernaryExpr(
                                            SingleCondFact(
                                              TermFiniteExpr(
                                                FiniteTerm(
                                                  FactorTerm(
                                                    DesignatorFactor(
                                                      Designator(
                                                        DesignatorName(
                                                         pet
                                                        ) [DesignatorName]
                                                        NoOptionalDesignator(
                                                        ) [NoOptionalDesignator]
                                                      ) [Designator]
                                                    ) [DesignatorFactor]
                                                  ) [FactorTerm]
                                                ) [FiniteTerm]
                                                NoOptionalTermList(
                                                ) [NoOptionalTermList]
                                              ) [TermFiniteExpr]
                                            ) [SingleCondFact]
                                          ) [NoTernaryExpr]
                                        ) [NewArrayFactor]
                                      ) [FactorTerm]
                                    ) [FiniteTerm]
                                    NoOptionalTermList(
                                    ) [NoOptionalTermList]
                                  ) [TermFiniteExpr]
                                ) [SingleCondFact]
                              ) [NoTernaryExpr]
                            ) [AssignOpExprDesignatorAdditionNoError]
                          ) [PossibleErrorAssignOpDesignatorAddition]
                        ) [DesignatorStatement]
                      ) [DesignatorStatementDecl]
                    ) [YesMethodBody]
                    DesignatorStatementDecl(
                      DesignatorStatement(
                        Designator(
                          DesignatorName(
                           niz
                          ) [DesignatorName]
                          YesOptionalDesignator(
                            NoTernaryExpr(
                              SingleCondFact(
                                TermFiniteExpr(
                                  FiniteTerm(
                                    FactorTerm(
                                      IntFactor(
                                       0
                                      ) [IntFactor]
                                    ) [FactorTerm]
                                  ) [FiniteTerm]
                                  NoOptionalTermList(
                                  ) [NoOptionalTermList]
                                ) [TermFiniteExpr]
                              ) [SingleCondFact]
                            ) [NoTernaryExpr]
                          ) [YesOptionalDesignator]
                        ) [Designator]
                        IncrementDesignatorAddition(
                        ) [IncrementDesignatorAddition]
                      ) [DesignatorStatement]
                    ) [DesignatorStatementDecl]
                  ) [YesMethodBody]
                  DesignatorStatementDecl(
                    DesignatorStatement(
                      Designator(
                        DesignatorName(
                         niz
                        ) [DesignatorName]
                        YesOptionalDesignator(
                          NoTernaryExpr(
                            SingleCondFact(
                              TermFiniteExpr(
                                FiniteTerm(
                                  FactorTerm(
                                    IntFactor(
                                     0
                                    ) [IntFactor]
                                  ) [FactorTerm]
                                ) [FiniteTerm]
                                NoOptionalTermList(
                                ) [NoOptionalTermList]
                              ) [TermFiniteExpr]
                            ) [SingleCondFact]
                          ) [NoTernaryExpr]
                        ) [YesOptionalDesignator]
                      ) [Designator]
                      IncrementDesignatorAddition(
                      ) [IncrementDesignatorAddition]
                    ) [DesignatorStatement]
                  ) [DesignatorStatementDecl]
                ) [YesMethodBody]
                PrintStatementDecl(
                  PrintStatement(
                    NoTernaryExpr(
                      SingleCondFact(
                        TermFiniteExpr(
                          FiniteTerm(
                            FactorTerm(
                              DesignatorFactor(
                                Designator(
                                  DesignatorName(
                                   niz
                                  ) [DesignatorName]
                                  YesOptionalDesignator(
                                    NoTernaryExpr(
                                      SingleCondFact(
                                        TermFiniteExpr(
                                          FiniteTerm(
                                            FactorTerm(
                                              IntFactor(
                                               0
                                              ) [IntFactor]
                                            ) [FactorTerm]
                                          ) [FiniteTerm]
                                          NoOptionalTermList(
                                          ) [NoOptionalTermList]
                                        ) [TermFiniteExpr]
                                      ) [SingleCondFact]
                                    ) [NoTernaryExpr]
                                  ) [YesOptionalDesignator]
                                ) [Designator]
                              ) [DesignatorFactor]
                            ) [FactorTerm]
                          ) [FiniteTerm]
                          NoOptionalTermList(
                          ) [NoOptionalTermList]
                        ) [TermFiniteExpr]
                      ) [SingleCondFact]
                    ) [NoTernaryExpr]
                    OptionalNoPrintNumber(
                    ) [OptionalNoPrintNumber]
                  ) [PrintStatement]
                ) [PrintStatementDecl]
              ) [YesMethodBody]
              DesignatorStatementDecl(
                DesignatorStatement(
                  Designator(
                    DesignatorName(
                     niz
                    ) [DesignatorName]
                    YesOptionalDesignator(
                      NoTernaryExpr(
                        SingleCondFact(
                          TermFiniteExpr(
                            FiniteTerm(
                              FactorTerm(
                                IntFactor(
                                 1
                                ) [IntFactor]
                              ) [FactorTerm]
                            ) [FiniteTerm]
                            NoOptionalTermList(
                            ) [NoOptionalTermList]
                          ) [TermFiniteExpr]
                        ) [SingleCondFact]
                      ) [NoTernaryExpr]
                    ) [YesOptionalDesignator]
                  ) [Designator]
                  DecrementDesignatorAddition(
                  ) [DecrementDesignatorAddition]
                ) [DesignatorStatement]
              ) [DesignatorStatementDecl]
            ) [YesMethodBody]
            PrintStatementDecl(
              PrintStatement(
                NoTernaryExpr(
                  SingleCondFact(
                    TermFiniteExpr(
                      FiniteTerm(
                        FactorTerm(
                          DesignatorFactor(
                            Designator(
                              DesignatorName(
                               niz
                              ) [DesignatorName]
                              YesOptionalDesignator(
                                NoTernaryExpr(
                                  SingleCondFact(
                                    TermFiniteExpr(
                                      FiniteTerm(
                                        FactorTerm(
                                          IntFactor(
                                           1
                                          ) [IntFactor]
                                        ) [FactorTerm]
                                      ) [FiniteTerm]
                                      NoOptionalTermList(
                                      ) [NoOptionalTermList]
                                    ) [TermFiniteExpr]
                                  ) [SingleCondFact]
                                ) [NoTernaryExpr]
                              ) [YesOptionalDesignator]
                            ) [Designator]
                          ) [DesignatorFactor]
                        ) [FactorTerm]
                      ) [FiniteTerm]
                      NoOptionalTermList(
                      ) [NoOptionalTermList]
                    ) [TermFiniteExpr]
                  ) [SingleCondFact]
                ) [NoTernaryExpr]
                OptionalNoPrintNumber(
                ) [OptionalNoPrintNumber]
              ) [PrintStatement]
            ) [PrintStatementDecl]
          ) [YesMethodBody]
          DesignatorStatementDecl(
            DesignatorStatement(
              Designator(
                DesignatorName(
                 bodovi
                ) [DesignatorName]
                NoOptionalDesignator(
                ) [NoOptionalDesignator]
              ) [Designator]
              DecrementDesignatorAddition(
              ) [DecrementDesignatorAddition]
            ) [DesignatorStatement]
          ) [DesignatorStatementDecl]
        ) [YesMethodBody]
        PrintStatementDecl(
          PrintStatement(
            NoTernaryExpr(
              SingleCondFact(
                TermFiniteExpr(
                  FiniteTerm(
                    FactorTerm(
                      DesignatorFactor(
                        Designator(
                          DesignatorName(
                           bodovi
                          ) [DesignatorName]
                          NoOptionalDesignator(
                          ) [NoOptionalDesignator]
                        ) [Designator]
                      ) [DesignatorFactor]
                    ) [FactorTerm]
                  ) [FiniteTerm]
                  NoOptionalTermList(
                  ) [NoOptionalTermList]
                ) [TermFiniteExpr]
              ) [SingleCondFact]
            ) [NoTernaryExpr]
            OptionalNoPrintNumber(
            ) [OptionalNoPrintNumber]
          ) [PrintStatement]
        ) [PrintStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  10:49:53,884 - ======================SEMANTIC ANALYSIS======================
INFO  10:49:53,884 - Const variable nula declared on line 3
INFO  10:49:53,884 - Const variable jedan declared on line 4
INFO  10:49:53,884 - Const variable pet declared on line 5
INFO  10:49:53,884 - Global array niz declared on line 7
INFO  10:49:53,884 - Global array nizch declared on line 8
INFO  10:49:53,884 - Method main declared on line 11
INFO  10:49:53,884 - Local variable bodovi declared on line 12
INFO  10:49:53,884 - Local variable bt declared on line 13
INFO  10:49:53,884 - Local variable c declared on line 14
INFO  10:49:53,884 - Variable c used: Var c: char, 2, 1 on line 16
ERROR 10:49:53,884 - Semantic Error: Term used behind - sign on line 16 inside of FinalExpr must be of int type
INFO  10:49:53,884 - Variable bodovi used: Var bodovi: int, 0, 1 on line 17
INFO  10:49:53,884 - Variable bodovi used: Var bodovi: int, 0, 1 on line 18
INFO  10:49:53,884 - Variable bodovi used: Var bodovi: int, 0, 1 on line 19
INFO  10:49:53,884 - Array niz used: Var niz: Array of int, 0, 0 on line 20
INFO  10:49:53,884 - Variable pet used: Con pet: int, 5, 0 on line 20
INFO  10:49:53,884 - Element of array niz used: Elem niz: int, 0, 0 on line 21
INFO  10:49:53,884 - Element of array niz used: Elem niz: int, 0, 0 on line 22
INFO  10:49:53,884 - Element of array niz used: Elem niz: int, 0, 0 on line 23
INFO  10:49:53,884 - Element of array niz used: Elem niz: int, 0, 0 on line 24
INFO  10:49:53,884 - Element of array niz used: Elem niz: int, 0, 0 on line 25
INFO  10:49:53,884 - Variable bodovi used: Var bodovi: int, 0, 1 on line 26
INFO  10:49:53,884 - Variable bodovi used: Var bodovi: int, 0, 1 on line 27
INFO  10:49:53,884 - =======================SYNTAX ANALYSIS=======================
INFO  10:49:53,884 - 1 methods in the program
INFO  10:49:53,884 - 3 constants declared
INFO  10:49:53,884 - 0 global variables declared
INFO  10:49:53,884 - 2 global arrays declared
INFO  10:49:53,884 - 3 local variables declared
INFO  10:49:53,884 - 0 local arrays declared
INFO  10:49:53,884 - 12 statements in main
INFO  10:49:53,884 - ===========ERROR ENCOUNTERED IN SEMANTIC ANALYSIS===========
