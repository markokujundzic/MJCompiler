INFO  12:21:47,310 - ====================LEXICAL ANALYSIS========================
INFO  12:21:47,382 - #2 program
INFO  12:21:47,390 - #9 prog
INFO  12:21:47,390 - #5 const
INFO  12:21:47,390 - #9 int
INFO  12:21:47,390 - #9 jedan
INFO  12:21:47,390 - #8 =
INFO  12:21:47,390 - #10 1
INFO  12:21:47,390 - #6 ;
INFO  12:21:47,390 - #5 const
INFO  12:21:47,390 - #9 int
INFO  12:21:47,390 - #9 pet
INFO  12:21:47,390 - #8 =
INFO  12:21:47,390 - #10 5
INFO  12:21:47,390 - #6 ;
INFO  12:21:47,390 - #9 int
INFO  12:21:47,390 - #9 x
INFO  12:21:47,390 - #6 ;
INFO  12:21:47,398 - #9 int
INFO  12:21:47,398 - #9 y
INFO  12:21:47,398 - #6 ;
INFO  12:21:47,398 - #3 {
INFO  12:21:47,398 - #15 void
INFO  12:21:47,398 - #9 main
INFO  12:21:47,406 - #13 (
INFO  12:21:47,406 - #14 )
INFO  12:21:47,406 - #3 {
INFO  12:21:47,406 - #9 x
INFO  12:21:47,406 - #8 =
INFO  12:21:47,406 - #10 0
INFO  12:21:47,406 - #6 ;
INFO  12:21:47,414 - #9 x
INFO  12:21:47,414 - #22 ++
INFO  12:21:47,414 - #6 ;
INFO  12:21:47,414 - #30 print
INFO  12:21:47,414 - #13 (
INFO  12:21:47,414 - #9 x
INFO  12:21:47,414 - #14 )
INFO  12:21:47,414 - #6 ;
INFO  12:21:47,414 - #4 }
INFO  12:21:47,414 - #4 }
INFO  12:21:47,430 - =======================SYNTAX TREE===========================
INFO  12:21:47,430 - Program(
  ProgramName(
   prog
  ) [ProgramName]
  YesDeclarationList(
    YesDeclarationList(
      YesDeclarationList(
        YesDeclarationList(
          NoDeclarationList(
          ) [NoDeclarationList]
          ConstantDeclaration(
            ConstDeclNoError(
              Type(
               int
              ) [Type]
              SingleConstDeclList(
                ConstDeclVariable(
                  ConstDeclName(
                   jedan
                  ) [ConstDeclName]
                  ConstDeclValueInt(
                   1
                  ) [ConstDeclValueInt]
                ) [ConstDeclVariable]
              ) [SingleConstDeclList]
            ) [ConstDeclNoError]
          ) [ConstantDeclaration]
        ) [YesDeclarationList]
        ConstantDeclaration(
          ConstDeclNoError(
            Type(
             int
            ) [Type]
            SingleConstDeclList(
              ConstDeclVariable(
                ConstDeclName(
                 pet
                ) [ConstDeclName]
                ConstDeclValueInt(
                 5
                ) [ConstDeclValueInt]
              ) [ConstDeclVariable]
            ) [SingleConstDeclList]
          ) [ConstDeclNoError]
        ) [ConstantDeclaration]
      ) [YesDeclarationList]
      VariableDeclaration(
        VarDeclNoError(
          Type(
           int
          ) [Type]
          SingleVarDeclList(
            DeclVariable(
              VarDeclName(
               x
              ) [VarDeclName]
              NoVarDeclArrayOption(
              ) [NoVarDeclArrayOption]
            ) [DeclVariable]
          ) [SingleVarDeclList]
        ) [VarDeclNoError]
      ) [VariableDeclaration]
    ) [YesDeclarationList]
    VariableDeclaration(
      VarDeclNoError(
        Type(
         int
        ) [Type]
        SingleVarDeclList(
          DeclVariable(
            VarDeclName(
             y
            ) [VarDeclName]
            NoVarDeclArrayOption(
            ) [NoVarDeclArrayOption]
          ) [DeclVariable]
        ) [SingleVarDeclList]
      ) [VarDeclNoError]
    ) [VariableDeclaration]
  ) [YesDeclarationList]
  YesMethodDeclarationList(
    NoMethodDeclarationList(
    ) [NoMethodDeclarationList]
    MethodDeclaration(
      VoidMethodReturnType(
      ) [VoidMethodReturnType]
      MethodName(
       main
      ) [MethodName]
      NoMethodParameters(
      ) [NoMethodParameters]
      NoMethodVariables(
      ) [NoMethodVariables]
      YesMethodBody(
        YesMethodBody(
          YesMethodBody(
            NoMethodBody(
            ) [NoMethodBody]
            DesignatorStatementDecl(
              DesignatorStatement(
                Designator(
                  DesignatorName(
                   x
                  ) [DesignatorName]
                  NoOptionalDesignator(
                  ) [NoOptionalDesignator]
                ) [Designator]
                PossibleErrorAssignOpDesignatorAddition(
                  AssignOpExprDesignatorAdditionNoError(
                    Assignop(
                    ) [Assignop]
                    NoTernaryExpr(
                      SingleCondFact(
                        TermFiniteExpr(
                          FiniteTerm(
                            FactorTerm(
                              IntFactor(
                               0
                              ) [IntFactor]
                            ) [FactorTerm]
                          ) [FiniteTerm]
                          NoOptionalTermList(
                          ) [NoOptionalTermList]
                        ) [TermFiniteExpr]
                      ) [SingleCondFact]
                    ) [NoTernaryExpr]
                  ) [AssignOpExprDesignatorAdditionNoError]
                ) [PossibleErrorAssignOpDesignatorAddition]
              ) [DesignatorStatement]
            ) [DesignatorStatementDecl]
          ) [YesMethodBody]
          DesignatorStatementDecl(
            DesignatorStatement(
              Designator(
                DesignatorName(
                 x
                ) [DesignatorName]
                NoOptionalDesignator(
                ) [NoOptionalDesignator]
              ) [Designator]
              IncrementDesignatorAddition(
              ) [IncrementDesignatorAddition]
            ) [DesignatorStatement]
          ) [DesignatorStatementDecl]
        ) [YesMethodBody]
        PrintStatementDecl(
          PrintStatement(
            NoTernaryExpr(
              SingleCondFact(
                TermFiniteExpr(
                  FiniteTerm(
                    FactorTerm(
                      DesignatorFactor(
                        Designator(
                          DesignatorName(
                           x
                          ) [DesignatorName]
                          NoOptionalDesignator(
                          ) [NoOptionalDesignator]
                        ) [Designator]
                      ) [DesignatorFactor]
                    ) [FactorTerm]
                  ) [FiniteTerm]
                  NoOptionalTermList(
                  ) [NoOptionalTermList]
                ) [TermFiniteExpr]
              ) [SingleCondFact]
            ) [NoTernaryExpr]
            OptionalNoPrintNumber(
            ) [OptionalNoPrintNumber]
          ) [PrintStatement]
        ) [PrintStatementDecl]
      ) [YesMethodBody]
    ) [MethodDeclaration]
  ) [YesMethodDeclarationList]
) [Program]
INFO  12:21:47,430 - ======================SEMANTIC ANALYSIS======================
INFO  12:21:47,430 - Const variable jedan declared on line 3
INFO  12:21:47,430 - Const variable pet declared on line 4
INFO  12:21:47,438 - Global variable x declared on line 6
INFO  12:21:47,438 - Global variable y declared on line 7
INFO  12:21:47,438 - Method main declared on line 10
INFO  12:21:47,438 - Variable x used: Var x: int, 0, 0 on line 12
INFO  12:21:47,438 - Variable x used: Var x: int, 0, 0 on line 13
INFO  12:21:47,438 - Variable x used: Var x: int, 0, 0 on line 14
INFO  12:21:47,438 - =======================SYNTAX ANALYSIS=======================
INFO  12:21:47,438 - 1 methods in the program
INFO  12:21:47,438 - 2 constants declared
INFO  12:21:47,438 - 2 global variables declared
INFO  12:21:47,438 - 0 global arrays declared
INFO  12:21:47,438 - 0 local variables declared
INFO  12:21:47,438 - 0 local arrays declared
INFO  12:21:47,438 - 3 statements in main
INFO  12:21:47,446 - ================SEMANTIC ANALYSIS SUCCESSFUL=================
