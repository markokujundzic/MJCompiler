// generated with ast extension for cup
// version 0.8
// 3/11/2020 21:21:52


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(DeclarationList DeclarationList);
    public void visit(ReturnType ReturnType);
    public void visit(Mulop Mulop);
    public void visit(MethodVariables MethodVariables);
    public void visit(PossibleFactors PossibleFactors);
    public void visit(FormParList FormParList);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(DesignatorAddition DesignatorAddition);
    public void visit(MethodStatements MethodStatements);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(VarDeclArrayOption VarDeclArrayOption);
    public void visit(Addop Addop);
    public void visit(PossibleStatement PossibleStatement);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(DesignatorActPars DesignatorActPars);
    public void visit(DeclVariables DeclVariables);
    public void visit(Condition Condition);
    public void visit(PrintInts PrintInts);
    public void visit(OptionalCondFact OptionalCondFact);
    public void visit(DesignatorOptional DesignatorOptional);
    public void visit(SimpleExpr SimpleExpr);
    public void visit(ConstDeclValue ConstDeclValue);
    public void visit(Expr Expr);
    public void visit(PossibleExpressions PossibleExpressions);
    public void visit(OptionalRelopExpr OptionalRelopExpr);
    public void visit(DesignatorList DesignatorList);
    public void visit(Statement Statement);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(FormParArrayOption FormParArrayOption);
    public void visit(CondFact CondFact);
    public void visit(Declaration Declaration);
    public void visit(ConstDeclVariables ConstDeclVariables);
    public void visit(OptionalCondTerm OptionalCondTerm);
    public void visit(MethodParameters MethodParameters);
    public void visit(RelopLessOrEqual RelopLessOrEqual);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreaterOrEqual RelopGreaterOrEqual);
    public void visit(RelopGreater RelopGreater);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqual RelopEqual);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(Assignop Assignop);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewArrayFactor NewArrayFactor);
    public void visit(NewFactor NewFactor);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(IntFactor IntFactor);
    public void visit(FunctionCallFactor FunctionCallFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(PossibleFactor PossibleFactor);
    public void visit(NoPossibleFactors NoPossibleFactors);
    public void visit(YesPossibleFactors YesPossibleFactors);
    public void visit(Term Term);
    public void visit(NoTermList NoTermList);
    public void visit(YesTermList YesTermList);
    public void visit(MinusTermExpr MinusTermExpr);
    public void visit(TermExpr TermExpr);
    public void visit(NoTernaryExpr NoTernaryExpr);
    public void visit(TernaryExpr TernaryExpr);
    public void visit(ExprCondFact ExprCondFact);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(CondTermCondFact CondTermCondFact);
    public void visit(CondTermList CondTermList);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConditionList ConditionList);
    public void visit(PossibleExpr PossibleExpr);
    public void visit(NoPossibleExpressions NoPossibleExpressions);
    public void visit(YesPossibleExpressions YesPossibleExpressions);
    public void visit(ActPars ActPars);
    public void visit(PrintInt PrintInt);
    public void visit(NoPrintInts NoPrintInts);
    public void visit(YesPrintInts YesPrintInts);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(NoReturnExpr NoReturnExpr);
    public void visit(YesReturnExpr YesReturnExpr);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(ElseStatement ElseStatement);
    public void visit(NoPossibleStatement NoPossibleStatement);
    public void visit(YesPossibleStatement YesPossibleStatement);
    public void visit(IfStatement IfStatement);
    public void visit(DesignatorNoActPars DesignatorNoActPars);
    public void visit(YesDesignatorActPars YesDesignatorActPars);
    public void visit(DesignatorAdditionDecrement DesignatorAdditionDecrement);
    public void visit(DesignatorAdditionIncrement DesignatorAdditionIncrement);
    public void visit(DesignatorAdditionActPars DesignatorAdditionActPars);
    public void visit(DesignatorAdditionAssignOpExpression DesignatorAdditionAssignOpExpression);
    public void visit(DesignatorOptionalName DesignatorOptionalName);
    public void visit(DesignatorOptionalExpression DesignatorOptionalExpression);
    public void visit(DesignatorOptionalPeriod DesignatorOptionalPeriod);
    public void visit(NoDesignatorList NoDesignatorList);
    public void visit(YesDesignatorList YesDesignatorList);
    public void visit(DesignatorName DesignatorName);
    public void visit(Designator Designator);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(MultipleStatements MultipleStatements);
    public void visit(PrintStatementDecl PrintStatementDecl);
    public void visit(ReadStatementDecl ReadStatementDecl);
    public void visit(ReturnStatementDecl ReturnStatementDecl);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(DoWhileStatementDecl DoWhileStatementDecl);
    public void visit(IfStatementDecl IfStatementDecl);
    public void visit(DesignatorStatementDecl DesignatorStatementDecl);
    public void visit(Type Type);
    public void visit(NoFormParArrayOption NoFormParArrayOption);
    public void visit(YesFormParArrayOption YesFormParArrayOption);
    public void visit(FormParName FormParName);
    public void visit(FormPar FormPar);
    public void visit(FormParSingle FormParSingle);
    public void visit(FormParPlural FormParPlural);
    public void visit(FormPars FormPars);
    public void visit(NoMethodStatements NoMethodStatements);
    public void visit(YesMethodStatements YesMethodStatements);
    public void visit(NoMethodVariables NoMethodVariables);
    public void visit(YesMethodVariables YesMethodVariables);
    public void visit(NoMethodParameters NoMethodParameters);
    public void visit(YesMethodParameters YesMethodParameters);
    public void visit(MethodName MethodName);
    public void visit(ReturnTypeVoid ReturnTypeVoid);
    public void visit(ReturnTypeType ReturnTypeType);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoMethodDeclarationList NoMethodDeclarationList);
    public void visit(YesMethodDeclarationList YesMethodDeclarationList);
    public void visit(NoVarDeclArrayOption NoVarDeclArrayOption);
    public void visit(YesVarDeclArrayOption YesVarDeclArrayOption);
    public void visit(VarDeclName VarDeclName);
    public void visit(DeclVariable DeclVariable);
    public void visit(VarDeclSingle VarDeclSingle);
    public void visit(VarDeclPlural VarDeclPlural);
    public void visit(VarDecl VarDecl);
    public void visit(ConstDeclValueBool ConstDeclValueBool);
    public void visit(ConstDeclValueChar ConstDeclValueChar);
    public void visit(ConstDeclValueInt ConstDeclValueInt);
    public void visit(ConstDeclName ConstDeclName);
    public void visit(ConstDeclVariable ConstDeclVariable);
    public void visit(ConstDeclSingle ConstDeclSingle);
    public void visit(ConstDeclPlural ConstDeclPlural);
    public void visit(ConstDecl ConstDecl);
    public void visit(VariableDeclaration VariableDeclaration);
    public void visit(ConstantDeclaration ConstantDeclaration);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(YesDeclarations YesDeclarations);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
